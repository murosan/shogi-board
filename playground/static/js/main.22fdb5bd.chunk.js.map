{"version":3,"sources":["img/components/columns/1.svg","img/components/columns/2.svg","img/components/columns/3.svg","img/components/columns/4.svg","img/components/columns/5.svg","img/components/columns/6.svg","img/components/columns/7.svg","img/components/columns/8.svg","img/components/columns/9.svg","img/components/rows/1.svg","img/components/rows/2.svg","img/components/rows/3.svg","img/components/rows/4.svg","img/components/rows/5.svg","img/components/rows/6.svg","img/components/rows/7.svg","img/components/rows/8.svg","img/components/rows/9.svg","img/components/buttons/configuration.svg","img/components/buttons/connect-to-engine.svg","img/components/buttons/kifu.svg","img/components/buttons/next-five.svg","img/components/buttons/next-one.svg","img/components/buttons/prev-five.svg","img/components/buttons/prev-one.svg","img/components/buttons/reverse.svg","img/components/buttons/stop-engine.svg","store/impl/Config.ts","store/impl/DisplayState.ts","model/display/MockupState.ts","handler/game/captures.ts","model/shogi/Piece.ts","handler/game/piece.ts","handler/game/position.ts","model/shogi/Turn.ts","model/engine/Optoin.ts","infrastructure/ShogiBoardClient.ts","store/impl/EngineState.ts","model/engine/State.ts","model/kifu/History.ts","handler/kifu/changeIndex.ts","lib/strings.ts","lib/validatior/utils/getEmpties.ts","lib/validatior/utils/getFromNexts.ts","lib/validatior/utils/algorithm.ts","lib/validatior/utils/getWithDiff.ts","lib/validatior/pieces/hisha.ts","lib/validatior/pieces/kaku.ts","lib/validatior/getTargets.ts","lib/validatior/pieces/fu.ts","lib/validatior/pieces/kyou.ts","lib/validatior/pieces/kei.ts","lib/validatior/pieces/gin.ts","lib/validatior/pieces/kin.ts","lib/validatior/pieces/gyoku.ts","lib/validatior/pieces/uma.ts","lib/validatior/pieces/ryu.ts","handler/kifu/genKifuString.ts","handler/kifu/getCurrent.ts","handler/kifu/pushMove.ts","lib/validatior/utils/getGyokuPoint.ts","lib/validatior/utils/isPointed.ts","model/shogi/InitialPositions.ts","model/kifu/Meta.ts","model/kifu/Kifu.ts","store/impl/GameState.ts","lib/validatior/utils/filterTargets.ts","store/Store.ts","components/engine/info/Columns.tsx","components/engine/info/SideInfo.tsx","components/setting/WidthController.tsx","components/util/CloseButton.tsx","components/form/Button.tsx","components/engine/connection/form/Buttons.tsx","components/form/Check.tsx","components/engine/connection/form/Checks.tsx","components/engine/connection/form/Range.tsx","components/engine/connection/form/Ranges.tsx","components/form/Select.tsx","components/engine/connection/form/Selects.tsx","components/form/Text.tsx","components/engine/connection/form/Texts.tsx","components/engine/connection/Detail.tsx","components/util/Loader.tsx","components/engine/connection/List.tsx","components/engine/connection/Controller.tsx","handler/kifu/getAsString.ts","lib/parser/parser.ts","lib/parser/parsers/util.ts","lib/parser/parsers/KIF.ts","lib/parser/parsers/kifu.ts","components/util/Checkmark.tsx","components/kifu/KifuMockup.tsx","components/setting/Setting.tsx","components/shogi/Cell.tsx","components/shogi/Board.tsx","components/shogi/Buttons.tsx","components/shogi/Captures.tsx","components/shogi/UserInfo.tsx","components/shogi/LeftSide.tsx","components/shogi/Kifu.tsx","handler/dom/intoView.ts","components/shogi/RightSide.tsx","components/shogi/BoardArea.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","DefaultConfig","keys","paintTargets","serverURL","saveToLocalStorage","saveBoardWidth","appWidth","saveAppWidth","debounce","w","set","this","get","v","n","Number","isNaN","b","String","s","forEach","key","remove","value","localStorage","setItem","getItem","removeItem","observable","action","DefaultDisplayState","state","mockup","resizing","handle","cap","p","f","Error","map","count","index","promote","demote","Math","abs","canPromote","props","sourceRow","isPromotable","piece","rows","isInEnemyArea","includes","destRow","move","handleCaptures","turn","pos","slice","d","dest","row","column","i","increaseCaptures","source","decreaseCaptures","updatedCap0","cap0","updatedCap1","cap1","moveOnBoard","moveCount","moveBoardOnly","line","r","c","Button","name","_","Check","initial","default","Range","min","max","inputValue","toString","Select","vars","Text","ShogiBoardClient","engineName","_engineName","_serverURL","engineNameKey","updateRange","rng","a","post","updateText","txt","buildUrl","url","axios","res","data","m","buttons","Map","checks","ranges","selects","texts","Object","values","t","btn","chk","sel","current","resp","entries","sort","info","moves","length","pieceId","mp","isPromoted","push","e","k","id","shortid","generate","score","reverse","path","body","headers","withName","encodeURIComponent","query","DefaultEngineState","names","setState","sbclient","connect","getOptions","options","console","error","alert","disconnect","close","start","stop","result","setPosition","computed","isBranch","changeHistory","h","x","y","lastIndex","last","init","xPassesIfBranch","concat","undefined","branches","changeBranch","columns","invalidRows","invalidColumns","points","nexts","comp","find","pts","l","rowDiff","columnDiff","target","getEmpties","diffList","getWithDiff","getTargets","point","columnsOfContainingFu","col","invalidRow","nextRow","fu","diff","kyou","invalidRow1","invalidRow2","getFromNexts","kei","gin","kin","kaku","hisha","gyoku","kakuPoint","kakuTargets","targets","uma","hishaPoint","hishaTargets","ryu","genKifuString","base","prevDest","srow","scol","drow","dcol","pc","pieceString","dr","dc","targettings","position","findSamePieces","filter","some","isMulti","another","arow","acol","isAbove","isBelow","isLeft","additionalForTwo","moving","sameRow","sameCol","below","above","left","right","isRight","additional","history","moveOrBranch","old","meta","pushToHistory","lastIsCurrent","pushToBranch","nextIndex","next","moveEquals","tail","createBranch","recursive","indexOfNewMove","findIndex","toHistory","isPointed","attacker","ignoreCheckLeaving","HandicapKinds","hirate","kyouOti","migiKyouOti","ryouKyouOti","kakuOti","hishaOti","hishaKyouOti","hishaRyouKyouOti","nimaiOti","sannmaiOti","yonnmaiOti","gomaiOti","rokumaiOti","nanamaiOti","hatimaiOti","kyuumaiOti","juumaiOti","ragyoku","positionFromKind","kind","nmaiOti","toPosition","hiratePos","reps","repsN","handicapped","replacements","Versions","newKifu","posKind","initPos","version","player","handicap","str","DefaultGameState","indexes","selected","currentMove","confirm","isPiece","clicked","cp","selectedAgain","moveTargets","ownerIsTurn","filtered","gp","getGyokuPoint","moved","isFu","isFromCapture","enemyGyoku","fuIsPointed","filteredEnemyGyokuTargets","filterTargets","moveAndUpdateState","moveProps","kifuStr","moveForKifu","setKifu","pushMove","kifu","mustPromote","promoted","preserved","branchIndex","getCurrent","DefaultStore","engineState","setServerURL","config","observe","gameState","change","updatePosition","newValue","StoreContext","createContext","observer","React","useContext","className","SideInfo","displayState","displayStateRef","useRef","configRef","useEffect","document","addEventListener","window","getSelection","removeAllRanges","setResizing","resizeOff","containerWidth","getElementById","clientWidth","clientX","setAppWidth","onMove","onMouseDown","CloseButton","one","two","onClick","width","height","x1","y1","x2","y2","stroke","strokeWidth","label","elms","Array","from","option","updateButton","type","onChange","checked","htmlFor","data-checked","data-unchecked","setValue","updateCheck","labelText","placeholder","required","opts","updateSelect","allowEmpty","classes","join","strElms","disconnectBtn","startBtn","startThinking","then","closeMockup","fetchInterval","catch","interval","getResult","setResult","Loader","store","latestEngineState","list","setNames","err","msg","engineNames","loader","setCurrentEngine","child","getAsString","getRec","kc","Parser","pf","parse","input","comb","or","parser","fallback","success","failif","cb","ws","full","space","rep","oneOf","arr","startsWith","substring","ss","literal","until","sep","integer","time","nums","sec","each","hour","minutes","seconds","totalTime","ln","noln","toDate","Date","getTime","cmt","metaCmt","metaBlank","metaToken","metaField","spacing","fields","date","other","_value","trim","end","title","sente","gote","place","hypens","separator","comment","toPoint","columnParser","rowParser","_same","timeParser","consumeTime","prev","st","suc","idx","prm","timeTotal","promo","before","after","movePos","kifuString","times","KIF","_input","trimRight","metaResult","nextInput","programComment","KifuFormats","Checkmark","ParseState","useState","copied","setCopied","parseState","setParseState","copyKifuOnClick","navigator","clipboard","writeText","setTimeout","issueLink","readOnClick","readText","format","text","setPaintTargets","setSaveToLocalStorage","setSaveBoardWidth","inRange","style","getPiece","isTurn","isTargeted","rv","rowInRange","colInRange","isTop","isStar","isSelected","rvp","getClassName","bgImg","backgroundImage","Column1Img","Column2Img","Column3Img","Column4Img","Column5Img","Column6Img","Column7Img","Column8Img","Column9Img","Row1Img","Row2Img","Row3Img","Row4Img","Row5Img","Row6Img","Row7Img","Row8Img","Row9Img","click","cf","isReversed","isGote","renderConfirm","clickPiece","renderMockup","prevOne","nextOne","prevFive","nextFive","skipKifu","clickKifu","engineOnClick","connectToEngine","stopThinking","PrevOneImg","NextOneImg","PrevFiveImg","NextFiveImg","ReverseImg","setMockupState","KifuImg","StopEngineImg","ConnectToEngineImg","ConfigurationImg","captures","isLeftSide","cells","children","selectedClass","getSelectedClass","isTurnClass","sideNumber","captureClass","isHirate","isRightSide","isSente","uinfoClass","unameClass","caps","scrollIntoViewIfNeeded","intoView","renderKifu","flatMap","main","head","rest","otherHeadsDom","kifuText","restDom","renderMove","renderBranch","BoardArea","isThinking","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","URL","process","href","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22fdb5bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.53ae04ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.97f27bd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.b1be70d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.3a3645e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.96880164.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.eed8b457.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.f7756286.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.091df296.svg\";","module.exports = __webpack_public_path__ + \"static/media/9.2a50e523.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.6deb9f45.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.d7945250.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.41251812.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.b9435843.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.617112e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.d05bf0e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.b426a2a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.33901adb.svg\";","module.exports = __webpack_public_path__ + \"static/media/9.f4885e44.svg\";","module.exports = __webpack_public_path__ + \"static/media/configuration.373e4b3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/connect-to-engine.98415f1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/kifu.24209af4.svg\";","module.exports = __webpack_public_path__ + \"static/media/next-five.af1deb21.svg\";","module.exports = __webpack_public_path__ + \"static/media/next-one.23a7a57e.svg\";","module.exports = __webpack_public_path__ + \"static/media/prev-five.b79ad6a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/prev-one.8e9ec7d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/reverse.13ea1c9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop-engine.d8f88815.svg\";","import debounce from 'lodash.debounce'\nimport { action, observable } from 'mobx'\nimport { Config } from '../Config'\n\nexport class DefaultConfig implements Config {\n  @observable paintTargets: boolean\n  @observable serverURL: string\n  @observable saveToLocalStorage: boolean\n  @observable saveBoardWidth: boolean\n  @observable appWidth: number | null\n\n  private readonly keys = {\n    paintTargets: 'paintTargets',\n    serverURL: 'serverURL',\n    saveToLocalStorage: 'saveToLocalStorage',\n    saveBoardWidth: 'saveBoardWidth',\n    appWidth: 'appWidth',\n  }\n\n  constructor() {\n    const {\n      paintTargets,\n      serverURL,\n      saveToLocalStorage,\n      saveBoardWidth,\n      appWidth,\n    } = this.keys\n    this.paintTargets = !(this.get(paintTargets) === 'false')\n    this.serverURL = this.get(serverURL) || ''\n    this.saveToLocalStorage = this.get(saveToLocalStorage) === 'true'\n    this.saveBoardWidth = this.get(saveBoardWidth) === 'true'\n    this.appWidth = (() => {\n      if (!this.saveBoardWidth) return null\n\n      const v = this.get(appWidth)\n      if (!v) return null\n\n      const n = Number(v)\n      if (isNaN(n)) return null\n      return n\n    })()\n  }\n\n  @action\n  async setPaintTargets(b: boolean): Promise<void> {\n    this.paintTargets = b\n    if (this.saveToLocalStorage) this.set(this.keys.paintTargets, String(b))\n  }\n\n  @action\n  async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n    if (this.saveToLocalStorage) this.set(this.keys.serverURL, s)\n  }\n\n  @action\n  async setSaveToLocalStorage(b: boolean): Promise<void> {\n    this.saveToLocalStorage = b\n    const { saveToLocalStorage, serverURL, paintTargets } = this.keys\n\n    if (this.saveToLocalStorage) {\n      this.set(saveToLocalStorage, `${b}`)\n      this.set(serverURL, this.serverURL)\n      this.set(paintTargets, `${this.paintTargets}`)\n      return\n    }\n\n    // false なら削除する\n    const keys = [saveToLocalStorage, serverURL, paintTargets]\n    keys.forEach(key => this.remove(key))\n  }\n\n  @action\n  async setSaveBoardWidth(b: boolean): Promise<void> {\n    this.saveBoardWidth = b\n    if (!b) {\n      this.remove(this.keys.saveBoardWidth)\n      this.remove(this.keys.appWidth)\n      return\n    }\n    this.set(this.keys.saveBoardWidth, 'true')\n    const w = this.appWidth\n    if (w) this.saveAppWidth(w)\n  }\n\n  @action\n  async setAppWidth(w?: number): Promise<void> {\n    if (!w) {\n      this.appWidth = null\n      this.remove(this.keys.appWidth)\n      return\n    }\n    this.appWidth = w\n    if (this.saveBoardWidth) this.saveAppWidth(w)\n  }\n\n  saveAppWidth = debounce(\n    (w: number) => this.set(this.keys.appWidth, `${w}`),\n    1000\n  )\n\n  private set(key: string, value: string): void {\n    localStorage.setItem(key, value)\n  }\n  private get(key: string): string | null {\n    return localStorage.getItem(key)\n  }\n  private remove(key: string): void {\n    localStorage.removeItem(key)\n  }\n}\n","import { action, observable } from 'mobx'\nimport { DisplayState } from '../DisplayState'\nimport { MockupHidden, MockupState } from '../../model/display/MockupState'\n\nexport class DefaultDisplayState implements DisplayState {\n  @observable mockup: MockupState = MockupHidden\n  @observable resizing: boolean = false\n\n  @action\n  async setMockupState(state: MockupState): Promise<void> {\n    this.mockup = state\n  }\n\n  @action\n  async closeMockup(): Promise<void> {\n    this.mockup = MockupHidden\n  }\n\n  @action\n  setResizing(b: boolean): void {\n    this.resizing = b\n  }\n}\n","// モックアップの表示をコントロールするための情報\nexport type MockupState = number\n\n// 非表示\nexport const MockupHidden: MockupState = 1\n\n// 将棋エンジンとの接続を制御したりする画面\nexport const MockupEngineControl: MockupState = 2\n\n// shogi-board-server の URL が設定されていないとき\n// 将棋エンジンに接続するボタンが押されたときに出す画面\nexport const MockupServerSetting: MockupState = 3\n\n// 設定画面\nexport const MockupSetting: MockupState = 4\n\n// 棋譜の`出力/読み込み`選択画面\nexport const MockupKifu: MockupState = 5\n","import { Gyoku0, Gyoku1, Piece } from '../../model/shogi/Piece'\n\n/**\n * 持ち駒を1つ増やす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 増やしたい駒\n */\nexport function increaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i + 1)\n}\n\n/**\n * 持ち駒を1つ減らす\n * @param cap number[] 持ち駒を表す配列。詳細は Position.ts\n * @param p Piece 減らしたい駒\n */\nexport function decreaseCaptures(cap: number[], p: Piece): number[] {\n  return handle(cap, Math.abs(p), i => i - 1)\n}\n\nfunction handle(cap: number[], p: Piece, f: (i: number) => number): number[] {\n  if (p === Gyoku0 || p === Gyoku1 || p > 10)\n    throw new Error('Piece ID of Captures must not be Gyoku or over 10.')\n\n  return cap.map((count, index) => {\n    // 駒IDが一致しなければそのまま\n    // p は Math.abs() を通っている\n    if (index !== p - 1) return count\n\n    const v = f(count)\n    if (v < 0)\n      throw new Error(\n        'Invalid function call. Captures must not contain negative value.'\n      )\n\n    return v\n  })\n}\n","export type Piece = number\n\nexport const Empty: Piece = 0\n\nexport const Fu0: Piece = 1\nexport const Kyou0: Piece = 2\nexport const Kei0: Piece = 3\nexport const Gin0: Piece = 4\nexport const Kin0: Piece = 5\nexport const Kaku0: Piece = 6\nexport const Hisha0: Piece = 7\nexport const Gyoku0: Piece = 8\nexport const To0: Piece = 11\nexport const NariKyou0: Piece = 12\nexport const NariKei0: Piece = 13\nexport const NariGin0: Piece = 14\nexport const Uma0: Piece = 16\nexport const Ryu0: Piece = 17\n\nexport const Fu1: Piece = -Fu0\nexport const Kyou1: Piece = -Kyou0\nexport const Kei1: Piece = -Kei0\nexport const Gin1: Piece = -Gin0\nexport const Kin1: Piece = -Kin0\nexport const Kaku1: Piece = -Kaku0\nexport const Hisha1: Piece = -Hisha0\nexport const Gyoku1: Piece = -Gyoku0\nexport const To1: Piece = -To0\nexport const NariKyou1: Piece = -NariKyou0\nexport const NariKei1: Piece = -NariKei0\nexport const NariGin1: Piece = -NariGin0\nexport const Uma1: Piece = -Uma0\nexport const Ryu1: Piece = -Ryu0\n","import {\n  Piece,\n  Empty,\n  Hisha0,\n  Kin0,\n  Fu0,\n  Fu1,\n  Kyou0,\n  Kyou1,\n  Kei0,\n  Kei1,\n} from '../../model/shogi/Piece'\n\n/**\n * 駒を成る\n * canPromote を通っている前提\n * @param p Piece 成る前の駒\n */\nexport function promote(p: Piece): Piece {\n  if (p > 0) return p + 10\n  return p - 10\n}\n\n/**\n * 駒を成る前の駒にする\n * @param p Piece 成駒\n */\nexport function demote(p: Piece): Piece {\n  if (Math.abs(p) < 10) return p\n\n  if (p < 0) return p + 10\n  return p - 10\n}\n\nexport interface CanPromoteProps {\n  // 移動前の行\n  sourceRow: number\n\n  // 移動後の行\n  destRow: number\n\n  // 移動する駒\n  piece: Piece\n}\n\n/**\n * 成・不成の選択ができるかどうか\n * 選択可能: true\n * 選択不可: false\n * @param props CanPromoteProps\n * @returns boolean\n *          成れる駒 && sourceRow か destRow が敵陣なら true\n *          成れない駒(金とか、既に成駒の場合)なら false\n */\nexport function canPromote(props: CanPromoteProps): boolean {\n  // 持ち駒\n  if (props.sourceRow === -1) return false\n\n  const isPromotable: boolean =\n    props.piece !== Empty &&\n    Math.abs(props.piece) !== Kin0 &&\n    Math.abs(props.piece) <= Hisha0\n\n  const rows: number[] = props.piece > 0 ? [0, 1, 2] : [6, 7, 8]\n  const isInEnemyArea: boolean =\n    rows.includes(props.sourceRow) || rows.includes(props.destRow)\n\n  return isPromotable && isInEnemyArea\n}\n\n/**\n * 移動後に、必ず成る必要があるか\n * 歩・香・桂が不成の場合に次に動けないとき true\n * @param p Piece 動かす駒\n * @param row 移動後の行\n * @returns boolean\n *          成必要がある場合 true\n */\nexport function mustPromote(p: Piece, row: number): boolean {\n  return (\n    ((p === Fu0 || p === Kyou0) && row === 0) ||\n    ((p === Fu1 || p === Kyou1) && row === 8) ||\n    (p === Kei0 && (row === 0 || row === 1)) ||\n    (p === Kei1 && (row === 8 || row === 7))\n  )\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport { Position } from '../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { decreaseCaptures, increaseCaptures } from './captures'\nimport { demote } from './piece'\n\nexport function move(p: MoveProps): Position {\n  // 持ち駒を更新する\n  type CaptureHandler = (cap: number[], turn: Turn) => number[]\n  const handleCaptures: CaptureHandler = (cap: number[], turn: Turn) => {\n    // 手番ではない場合、何もしない\n    if (p.pos.turn !== turn) return cap.slice()\n\n    // 移動先が相手の駒なら持ち駒を増やす\n    const d: Piece = p.pos.pos[p.dest.row][p.dest.column]\n    if (d * turn < 0) return increaseCaptures(cap, demote(d))\n\n    // 移動元が持ち駒なら減らす\n    if (p.source.row === -1 && p.source.column === -1)\n      return decreaseCaptures(cap, p.piece)\n\n    return cap.slice()\n  }\n\n  const updatedCap0: number[] = handleCaptures(p.pos.cap0, Sente)\n  const updatedCap1: number[] = handleCaptures(p.pos.cap1, Gote)\n\n  return {\n    pos: moveOnBoard(p),\n    cap0: updatedCap0,\n    cap1: updatedCap1,\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nexport function moveBoardOnly(p: MoveProps): Position {\n  return {\n    pos: moveOnBoard(p),\n    cap0: p.pos.cap0.slice(),\n    cap1: p.pos.cap1.slice(),\n    turn: -p.pos.turn as Turn,\n    moveCount: p.pos.moveCount + 1,\n  }\n}\n\nfunction moveOnBoard(p: MoveProps): number[][] {\n  return p.pos.pos.map((line, r) =>\n    line.map((piece, c) => {\n      // 移動前の位置なら空マスに\n      if (p.source.row === r && p.source.column === c) return Empty\n\n      // 移動先の位置なら更新\n      if (p.dest.row === r && p.dest.column === c) return p.piece\n\n      return piece\n    })\n  )\n}\n","// 手番\n//  1: 先手\n// -1: 後手\nexport type Turn = 1 | -1\n\nexport const Sente: Turn = 1\nexport const Gote: Turn = -1\n","import { action, observable } from 'mobx'\n\ninterface Option<T> {\n  readonly name: string\n  setValue(value: T): void\n}\n\nexport class Button implements Option<any> {\n  readonly name: string\n  constructor(name: string) {\n    this.name = name\n  }\n\n  setValue(_: any): void {}\n}\n\nexport class Check implements Option<boolean> {\n  @observable value: boolean\n  readonly name: string\n  readonly default: boolean\n  constructor(name: string, value: boolean, initial: boolean) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: boolean): void {\n    this.value = value\n  }\n}\n\nexport class Range implements Option<string> {\n  @observable value: number\n  @observable inputValue: string\n  readonly name: string\n  readonly default: number\n  readonly min: number\n  readonly max: number\n  constructor(\n    name: string,\n    value: number,\n    initial: number,\n    min: number,\n    max: number\n  ) {\n    this.name = name\n    this.value = value\n    this.inputValue = value.toString()\n    this.default = initial\n    this.min = min\n    this.max = max\n  }\n\n  @action setValue(value: string): void {\n    this.inputValue = value\n    const n: number = Number(this.inputValue)\n    if (Number.isNaN(n) || n < this.min || n > this.max) return\n    this.value = n\n  }\n}\n\nexport class Select implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n  readonly vars: string[]\n  constructor(name: string, value: string, initial: string, vars: string[]) {\n    this.name = name\n    this.value = value\n    this.default = initial\n    this.vars = vars\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport class Text implements Option<string> {\n  @observable value: string\n  readonly name: string\n  readonly default: string\n\n  constructor(name: string, value: string, initial: string) {\n    this.name = name\n    this.value = value\n    this.default = initial\n  }\n\n  @action setValue(value: string) {\n    this.value = value\n  }\n}\n\nexport interface Options {\n  buttons: Map<string, Button>\n  checks: Map<string, Check>\n  ranges: Map<string, Range>\n  selects: Map<string, Select>\n  texts: Map<string, Text>\n}\n","import axios from 'axios'\nimport debounce from 'lodash.debounce'\nimport shortid from 'shortid'\nimport { move } from '../handler/game/position'\nimport { Info } from '../model/engine/Info'\nimport {\n  Button,\n  Check,\n  Options,\n  Range,\n  Select,\n  Text,\n} from '../model/engine/Optoin'\nimport { MoveProps } from '../model/events/MoveProps'\nimport { Move } from '../model/kifu/Move'\nimport { ResponseInfo } from '../model/response/ResponseInfo'\nimport { Empty } from '../model/shogi/Piece'\nimport { Position } from '../model/shogi/Position'\n\nconst DEBOUNCE_MILLIS = 1000\n\nexport class ShogiBoardClient {\n  private _engineName?: string\n  private _serverURL?: string\n\n  private readonly engineNameKey = 'key'\n\n  constructor(engineName?: string, serverURL?: string) {\n    this._engineName = engineName\n    this._serverURL = serverURL\n  }\n\n  set engineName(name: string) {\n    this._engineName = name\n  }\n\n  get engineName(): string {\n    if (!this._engineName) throw new Error('engineName is not defined.')\n    return this._engineName\n  }\n\n  set serverURL(url: string) {\n    this._serverURL = url\n  }\n\n  get serverURL(): string {\n    if (!this._serverURL) throw new Error('serverURL is not defined. serverURL')\n    return this._serverURL\n  }\n\n  async init(): Promise<string[]> {\n    const url = await this.buildUrl('init', false)\n    const res = await axios.post(url)\n    return res.data\n  }\n\n  async connect(): Promise<void> {\n    return await this.post('connect')\n  }\n\n  async close(): Promise<void> {\n    return await this.post('close')\n  }\n\n  async start(): Promise<void> {\n    return await this.post('start')\n  }\n\n  async stop(): Promise<void> {\n    return await this.post('stop')\n  }\n\n  async getOptions(): Promise<Options> {\n    // res は Options と言いつつ、中身は Map じゃなくて object\n    // TODO: データの持ち方考える\n    const res: Options = await this.get('options/get')\n    const m: Options = {\n      buttons: new Map(),\n      checks: new Map(),\n      ranges: new Map(),\n      selects: new Map(),\n      texts: new Map(),\n    }\n    Object.values(res.buttons).forEach(b =>\n      m.buttons.set(b.name, new Button(b.name))\n    )\n    Object.values(res.checks).forEach(c =>\n      m.checks.set(c.name, new Check(c.name, c.value, c.default))\n    )\n    Object.values(res.ranges).forEach(r =>\n      m.ranges.set(r.name, new Range(r.name, r.value, r.default, r.min, r.max))\n    )\n    Object.values(res.selects).forEach(s =>\n      m.selects.set(s.name, new Select(s.name, s.value, s.default, s.vars))\n    )\n    Object.values(res.texts).forEach(t =>\n      m.texts.set(t.name, new Text(t.name, t.value, t.default))\n    )\n    return m\n  }\n\n  async updateButton(btn: Button): Promise<void> {\n    return await this.post('options/update/button', btn)\n  }\n\n  async updateCheck(chk: Check): Promise<void> {\n    return await this.post('options/update/check', chk)\n  }\n\n  updateRange = debounce(async (rng: Range): Promise<void> => {\n    return await this.post('options/update/range', rng)\n  }, DEBOUNCE_MILLIS)\n\n  async updateSelect(sel: Select): Promise<void> {\n    return await this.post('options/update/select', sel)\n  }\n\n  updateText = debounce(async (txt: Text): Promise<void> => {\n    return await this.post('options/update/text', txt)\n  }, DEBOUNCE_MILLIS)\n\n  async getResult(current: Move): Promise<Info[]> {\n    const resp: { number: ResponseInfo } = await this.get('result/get')\n    let p: Position = current.pos\n\n    // レスポンスのキーでソートされた ResponseInfo を取り出し、\n    // move メソッドで局面を動かしながら Info を生成していく\n    return Object.entries(resp)\n      .sort((a, b) => {\n        if (a[0] < b[0]) return -1\n        if (a[0] > b[0]) return 1\n        return 0\n      })\n      .map(([_, info]) => {\n        let i: number = 0\n        p = current.pos\n        const moves: MoveProps[] = []\n\n        try {\n          while (i < info.moves.length) {\n            const m = info.moves[i]\n            const source = { row: m.source!.row, column: m.source!.column }\n            const dest = { row: m.dest!.row, column: m.dest!.column }\n            const piece = m.pieceId || p.pos[source.row][source.column]\n            if (piece === Empty) break\n            const mp: MoveProps = {\n              pos: p,\n              source,\n              dest,\n              piece,\n              promote: m.isPromoted,\n            }\n            moves.push(mp)\n            p = move(mp)\n            i = (i + 1) | 0\n          }\n        } catch (e) {\n          // ズレは出るのでエラーは握りつぶす\n          // console.error(i, p, e)\n        }\n\n        const values = new Map()\n        Object.entries(info.values).forEach(([k, v]) => values.set(k, v))\n\n        return {\n          id: shortid.generate(),\n          values, // 一旦捨てる\n          score: info.score * current.pos.turn, // 後手番なら -1 をかける\n          moves,\n        }\n      })\n  }\n\n  async setPosition(p: Position): Promise<void> {\n    const pos: Position = {\n      pos: p.pos.map(r => r.slice().reverse()),\n      cap0: p.cap0,\n      cap1: p.cap1,\n      turn: p.turn,\n      moveCount: p.moveCount,\n    }\n    return await this.post('position/set', pos)\n  }\n\n  private async get<T>(path: string): Promise<T> {\n    const url = await this.buildUrl(path, true)\n    const res = await axios.get(url)\n    return res.data\n  }\n\n  private async post(path: string, body?: object): Promise<void> {\n    const url = await this.buildUrl(path, true)\n    await axios.post(url, body, {\n      headers: { 'Content-Type': 'application/json' },\n    })\n  }\n\n  private async buildUrl(path: string, withName: boolean) {\n    const e = (s: string) => encodeURIComponent(s)\n    const query = withName ? `?${this.engineNameKey}=${e(this.engineName)}` : ''\n    return `${this.serverURL}/${path}${query}`\n  }\n\n  private e(s: any): string {\n    return encodeURIComponent(s)\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { ShogiBoardClient } from '../../infrastructure/ShogiBoardClient'\nimport { EngineState } from '../EngineState'\nimport { Info } from '../../model/engine/Info'\nimport { Options } from '../../model/engine/Optoin'\nimport {\n  Connected,\n  Connecting,\n  NotConnected,\n  StandBy,\n  State,\n  Thinking,\n} from '../../model/engine/State'\nimport { Position } from '../../model/shogi/Position'\n\nexport class DefaultEngineState implements EngineState {\n  @observable names: string[] = []\n  @observable current: string | null = null\n  @observable options: Options | null = null\n  @observable state: State = NotConnected\n  @observable result: Info[] | null = null\n  @observable serverURL: string = ''\n\n  @computed get sbclient(): ShogiBoardClient {\n    return new ShogiBoardClient(this.current || '', this.serverURL)\n  }\n\n  @action async setNames(names: string[]): Promise<void> {\n    this.names = names\n  }\n\n  @action async setState(state: State): Promise<void> {\n    this.state = state\n  }\n\n  @action async connect(name: string): Promise<void> {\n    if (!this.names.includes(name))\n      throw new Error('Unknown engine name. name=' + name)\n\n    this.current = name\n    try {\n      this.setState(Connecting)\n      await this.sbclient.connect()\n      this.options = await this.sbclient.getOptions()\n      this.setState(Connected)\n    } catch (e) {\n      console.error('Failed to connect', e)\n      alert('接続に失敗しました') // TODO\n      await this.disconnect()\n    }\n  }\n\n  @action async disconnect(): Promise<void> {\n    try {\n      await this.sbclient.close()\n    } catch (e) {\n      console.error('接続解除に失敗しました', e)\n    } finally {\n      this.current = null\n      this.options = null\n      this.state = NotConnected\n    }\n  }\n\n  @action async startThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[startThinking] current engine is not set')\n\n    await this.sbclient.start()\n    await this.setState(Thinking)\n  }\n\n  @action async stopThinking(): Promise<void> {\n    if (!this.current)\n      throw new Error('[stopThinking] current engine is not set')\n    if (this.state !== Thinking) return\n\n    await this.sbclient.stop()\n    await this.setState(StandBy)\n  }\n\n  @action async setResult(i: Info[]): Promise<void> {\n    this.result = i\n  }\n\n  async updatePosition(p: Position): Promise<void> {\n    await this.sbclient.setPosition(p)\n  }\n\n  @action async setServerURL(s: string): Promise<void> {\n    this.serverURL = s\n  }\n}\n","// 将棋エンジンの状態を表すID\nexport type State = 0 | 1 | 2 | 3 | 4\n\n// 接続前\nexport const NotConnected: State = 0\n\n// 接続中・ローディング中のComponentを表示するため\nexport const Connecting: State = 1\n\n// 接続済\nexport const Connected: State = 2\n\n// 将棋エンジン、待機中(思考中ではない)\nexport const StandBy: State = 3\n\n// 将棋エンジン思考中\nexport const Thinking: State = 4\n","import Branch from './Branch'\nimport { Move } from './Move'\n\nexport type KifuComponent = Move | Branch\n\n// TODO: もうちょい持ち方考える\n// 理想は\n// {\n//   head: Move,\n//   next: History,\n//   isCurrent: boolean\n// }\n// だが、JSON互換的に苦しい感じ\nexport default interface History {\n  moves: KifuComponent[]\n\n  // history のインデックス\n  // ブラウザで表示するときに現在局面がどこか探せるように\n  index: number\n}\n\nexport function isBranch(m: KifuComponent): m is Branch {\n  return 'branches' in m\n}\n","import Branch from '../../model/kifu/Branch'\nimport History, { isBranch, KifuComponent } from '../../model/kifu/History'\nimport Kifu from '../../model/kifu/Kifu'\n\n/**\n * 現在局面を更新した新しい棋譜を返す\n * @param k Kifu 更新したい棋譜\n * @param x number 現在局面にしたい手数\n * @param y number | undefined 分岐を切り替える場合のみ、分岐のインデックス\n */\nexport function changeIndex(k: Kifu, x: number, y?: number): Kifu {\n  return {\n    meta: k.meta,\n    history: changeHistory(k.history, x, y),\n  }\n}\n\n// TODO: Move にインデックスを入れたので、少しシンプルにできる\nfunction changeHistory(h: History, x: number, y?: number): History {\n  const lastIndex: number = h.moves.length - 1\n  const last: KifuComponent = h.moves[lastIndex]\n  const init: KifuComponent[] = h.moves.slice(0, lastIndex)\n\n  const xPassesIfBranch: number = x <= lastIndex ? 0 : x - lastIndex\n\n  const moves: KifuComponent[] = isBranch(last)\n    ? init.concat(changeBranch(last, xPassesIfBranch, y))\n    : h.moves.slice()\n\n  const index: number = x <= lastIndex ? x : lastIndex\n\n  return { moves, index }\n}\n\nfunction changeBranch(b: Branch, x: number, y?: number): Branch {\n  const index = x === 0 && y !== undefined ? y : b.index\n\n  if (x === 0)\n    return {\n      branches: b.branches.map(h => changeHistory(h, 0)),\n      index,\n    }\n\n  const branches = b.branches.map((h: History, i: number) =>\n    i === b.index ? changeHistory(h, x, y) : h\n  )\n\n  return { branches, index }\n}\n","import {\n  Fu0,\n  Gin0,\n  Gyoku0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  NariGin0,\n  NariKei0,\n  NariKyou0,\n  Piece,\n  Ryu0,\n  To0,\n  Uma0,\n} from '../model/shogi/Piece'\n\nconst rows = ['一', '二', '三', '四', '五', '六', '七', '八', '九']\nconst columns = ['１', '２', '３', '４', '５', '６', '７', '８', '９']\n\nexport const rowString = (r: number) => rows[r]\nexport const columnString = (c: number) => columns[c]\n\nexport const pieceString = (piece: Piece) => {\n  const p = Math.abs(piece)\n\n  if (p === Fu0) return '歩'\n  if (p === Kyou0) return '香'\n  if (p === Kei0) return '桂'\n  if (p === Gin0) return '銀'\n  if (p === Kin0) return '金'\n  if (p === Kaku0) return '角'\n  if (p === Hisha0) return '飛'\n  if (p === Gyoku0) return '玉'\n  if (p === To0) return 'と'\n  if (p === NariKyou0) return '成香'\n  if (p === NariKei0) return '成桂'\n  if (p === NariGin0) return '成銀'\n  if (p === Uma0) return '馬'\n  if (p === Ryu0) return '龍'\n\n  throw new Error('Failed to ident piece name. received: ' + piece)\n}\n","import { Piece, Empty } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (\n  pos: Piece[][],\n  invalidRows?: number[],\n  invalidColumns?: number[]\n): Point[] {\n  const points: Point[] = []\n\n  for (let r = 0; r < 9; r++) {\n    if (invalidRows && invalidRows.includes(r)) continue\n\n    for (let c = 0; c < 9; c++) {\n      const columnIsInvalid = invalidColumns && invalidColumns.includes(c)\n      if (columnIsInvalid || pos[r][c] !== Empty) continue\n      points.push({ row: r, column: c })\n    }\n  }\n\n  return points\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (pos: Piece[][], nexts: number[][], p: Piece): Point[] {\n  const points: Point[] = []\n\n  for (let i = 0; i < nexts.length; i++) {\n    const row = nexts[i][0]\n    const column = nexts[i][1]\n    if (\n      row >= 0 &&\n      row <= 8 &&\n      column >= 0 &&\n      column <= 8 &&\n      pos[row][column] * p <= 0\n    )\n      points.push({ row, column })\n  }\n\n  return points\n}\n","import Point from '../../../model/shogi/Point'\n\nexport function comp(a: Point, b: Point): number {\n  return a.row - b.row || a.column - b.column\n}\n\nexport function find(pts: Point[], p: Point): number {\n  let i = pts.length >> 1\n  let l = 0\n  let r = pts.length - 1\n\n  while (l <= r) {\n    if (pts[i].row === p.row && pts[i].column === p.column) return i\n    if (pts[i].row < p.row) l = i + 1\n    else if (pts[i].row > p.row) r = i - 1\n    else if (pts[i].column < p.column) l = i + 1\n    else r = i - 1\n    i = l + ((r - l) >> 1)\n  }\n\n  return -1\n}\n","import { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\n\nexport default function (\n  pos: Piece[][],\n  row: number,\n  column: number,\n  piece: Piece,\n  points: Point[],\n  rowDiff: number,\n  columnDiff: number\n): void {\n  while (0 <= row && row <= 8 && 0 <= column && column <= 8) {\n    const target: Piece = pos[row][column]\n    if (target * piece > 0) break\n    points.push({ row, column })\n    if (target * piece < 0) break\n    row += rowDiff\n    column += columnDiff\n  }\n}\n","import { Hisha0, Hisha1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Hisha0 && p.piece !== Hisha1))\n    throw new Error('Called validation for hisha, but piece id was not hisha.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [\n    [-1, 0],\n    [0, -1],\n    [0, 1],\n    [1, 0],\n  ]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import { Kaku0, Kaku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { comp } from '../utils/algorithm'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kaku0 && p.piece !== Kaku1))\n    throw new Error('Called validation for kaku, but piece id was not kaku.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const diffList = [\n    [-1, -1],\n    [-1, 1],\n    [1, -1],\n    [1, 1],\n  ]\n  const points: Point[] = []\n\n  for (let i = 0; i < diffList.length; i++) {\n    getWithDiff(\n      pos.pos,\n      p.row + diffList[i][0],\n      p.column + diffList[i][1],\n      p.piece,\n      points,\n      diffList[i][0],\n      diffList[i][1]\n    )\n  }\n\n  points.sort(comp)\n  return points\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  Ryu0,\n  Ryu1,\n  To0,\n  To1,\n  Uma0,\n  Uma1,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Position } from '../../model/shogi/Position'\nimport fu from './pieces/fu'\nimport gin from './pieces/gin'\nimport gyoku from './pieces/gyoku'\nimport hisha from './pieces/hisha'\nimport kaku from './pieces/kaku'\nimport kei from './pieces/kei'\nimport kin from './pieces/kin'\nimport kyou from './pieces/kyou'\nimport ryu from './pieces/ryu'\nimport uma from './pieces/uma'\n\n/**\n * 駒を動かせる場所を取得する\n * @param pos Position 駒の配置\n * @param point Point 動ける場所を取得したい駒の位置\n */\nexport function getTargets(pos: Position, point: Point): Point[] {\n  const piece = point.piece\n\n  if (piece === Empty)\n    throw new Error('Cannot get targets to move for empty cell.')\n  if (piece === Fu0 || piece === Fu1) return fu(pos, point)\n  if (piece === Kyou0 || piece === Kyou1) return kyou(pos, point)\n  if (piece === Kei0 || piece === Kei1) return kei(pos, point)\n  if (piece === Gin0 || piece === Gin1) return gin(pos, point)\n  if (\n    piece === Kin0 ||\n    piece === Kin1 ||\n    piece === To0 ||\n    piece === To1 ||\n    piece === NariKyou0 ||\n    piece === NariKyou1 ||\n    piece === NariKei0 ||\n    piece === NariKei1 ||\n    piece === NariGin0 ||\n    piece === NariGin1\n  )\n    return kin(pos, point)\n  if (piece === Kaku0 || piece === Kaku1) return kaku(pos, point)\n  if (piece === Hisha0 || piece === Hisha1) return hisha(pos, point)\n  if (piece === Gyoku0 || piece === Gyoku1) return gyoku(pos, point)\n  if (piece === Uma0 || piece === Uma1) return uma(pos, point)\n  if (piece === Ryu0 || piece === Ryu1) return ryu(pos, point)\n\n  throw new Error('Could not get targets to move. Got invalid piece ID')\n}\n","import { Fu0, Fu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Fu0 && p.piece !== Fu1))\n    throw new Error('Called validation for fu, but piece id was not fu.')\n\n  // 二歩チェックのため、すでに歩がある列を入れておく\n  const columnsOfContainingFu: number[] = []\n  for (let col = 0; col < 9; col++) {\n    for (let row = 0; row < 9; row++) {\n      if (pos.pos[row][col] === p.piece) {\n        columnsOfContainingFu.push(col)\n        break\n      }\n    }\n  }\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow], columnsOfContainingFu)\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 1 : p.row + 1\n\n  // 盤外か味方の駒ならなし\n  if (nextRow < 0 || nextRow > 8 || pos.pos[nextRow][p.column] * p.piece > 0)\n    return []\n\n  // 空マスか、相手の駒ならOK\n  return [{ row: nextRow, column: p.column }]\n}\n","import { Kyou0, Kyou1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getWithDiff from '../utils/getWithDiff'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kyou0 && p.piece !== Kyou1))\n    throw new Error('Called validation for kyou, but piece id was not kyou.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow: number = p.piece > 0 ? 0 : 8\n    return getEmpties(pos.pos, [invalidRow])\n  }\n\n  const diff = p.piece > 0 ? -1 : 1\n  const points: Point[] = []\n  getWithDiff(pos.pos, p.row + diff, p.column, p.piece, points, diff, 0)\n  if (p.piece > 0) points.reverse()\n  return points\n}\n","import { Kei0, Kei1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Kei0 && p.piece !== Kei1))\n    throw new Error('Called validation for kei, but piece id was not kei.')\n\n  if (p.row === -1 && p.column === -1) {\n    const invalidRow1: number = p.piece > 0 ? 0 : 8\n    const invalidRow2: number = p.piece > 0 ? invalidRow1 + 1 : invalidRow1 - 1\n    return getEmpties(pos.pos, [invalidRow1, invalidRow2])\n  }\n\n  const nextRow: number = p.piece > 0 ? p.row - 2 : p.row + 2\n  if (nextRow < 0 || nextRow > 8) return []\n  const nexts: number[][] = [\n    [nextRow, p.column - 1],\n    [nextRow, p.column + 1],\n  ]\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gin0, Gin1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gin0 && p.piece !== Gin1))\n    throw new Error('Called validation for gin, but piece id was not gin.')\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column + 1],\n        ]\n      : [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import {\n  Kin0,\n  Kin1,\n  NariGin0,\n  NariGin1,\n  NariKei0,\n  NariKei1,\n  NariKyou0,\n  NariKyou1,\n  To0,\n  To1,\n} from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getEmpties from '../utils/getEmpties'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (\n    !p.piece ||\n    (p.piece !== Kin0 &&\n      p.piece !== Kin1 &&\n      p.piece !== To0 &&\n      p.piece !== To1 &&\n      p.piece !== NariKyou0 &&\n      p.piece !== NariKyou1 &&\n      p.piece !== NariKei0 &&\n      p.piece !== NariKei1 &&\n      p.piece !== NariGin0 &&\n      p.piece !== NariGin1)\n  )\n    throw new Error(\n      'Called validation for kin(or promoted piece moves as same as kin), but piece id was not as expected.'\n    )\n\n  if (p.row === -1 && p.column === -1) return getEmpties(pos.pos)\n\n  const nexts: number[][] =\n    p.piece > 0\n      ? [\n          [p.row - 1, p.column - 1],\n          [p.row - 1, p.column],\n          [p.row - 1, p.column + 1],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column],\n        ]\n      : [\n          [p.row - 1, p.column],\n          [p.row, p.column - 1],\n          [p.row, p.column + 1],\n          [p.row + 1, p.column - 1],\n          [p.row + 1, p.column],\n          [p.row + 1, p.column + 1],\n        ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Gyoku0, Gyoku1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport getFromNexts from '../utils/getFromNexts'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Gyoku0 && p.piece !== Gyoku1))\n    throw new Error('Called validation for gyoku, but piece id was not gyoku.')\n\n  if (p.row === -1 && p.column === -1)\n    throw new Error('Gyoku must not be captured')\n\n  const nexts: number[][] = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column],\n    [p.row - 1, p.column + 1],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column],\n    [p.row + 1, p.column + 1],\n  ]\n\n  return getFromNexts(pos.pos, nexts, p.piece)\n}\n","import { Uma0, Uma1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../../handler/game/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport kaku from './kaku'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Uma0 && p.piece !== Uma1))\n    throw new Error('Called validation for uma, but piece id was not uma.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Uma must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column],\n    [p.row, p.column - 1],\n    [p.row, p.column + 1],\n    [p.row + 1, p.column],\n  ]\n\n  const kakuPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const kakuTargets = kaku(pos, kakuPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(kakuTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { Ryu0, Ryu1 } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { demote } from '../../../handler/game/piece'\nimport { comp } from '../utils/algorithm'\nimport getFromNexts from '../utils/getFromNexts'\nimport hisha from './hisha'\n\nexport default function (pos: Position, p: Point): Point[] {\n  if (!p.piece || (p.piece !== Ryu0 && p.piece !== Ryu1))\n    throw new Error('Called validation for ryu, but piece id was not ryu.')\n\n  if (p.row === -1 || p.column === -1)\n    throw new Error('Ryu must not be captured')\n\n  const nexts = [\n    [p.row - 1, p.column - 1],\n    [p.row - 1, p.column + 1],\n    [p.row + 1, p.column - 1],\n    [p.row + 1, p.column + 1],\n  ]\n\n  const hishaPoint = { row: p.row, column: p.column, piece: demote(p.piece) }\n  const hishaTargets = hisha(pos, hishaPoint)\n  const targets = getFromNexts(pos.pos, nexts, p.piece).concat(hishaTargets)\n  targets.sort(comp)\n  return targets\n}\n","import { MoveProps } from '../../model/events/MoveProps'\nimport {\n  Fu0,\n  Fu1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kyou0,\n  Kyou1,\n  Ryu0,\n  Ryu1,\n  Uma0,\n  Uma1,\n} from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Position } from '../../model/shogi/Position'\nimport { Turn } from '../../model/shogi/Turn'\nimport { canPromote, demote } from '../game/piece'\nimport { columnString, pieceString, rowString } from '../../lib/strings'\nimport { getTargets } from '../../lib/validatior/getTargets'\n\n/*\n優先順位イメージ\n\n上|引\n左|右\n寄\n直\n(左|右)寄\n(左|右)(上|引)\n*/\n\n/**\n * 棋譜の文字列を生成する\n * 生成のルールについては以下を参照\n * https://www.shogi.or.jp/faq/kihuhyouki.html\n *\n * @param props MoveProps\n */\nexport function genKifuString(props: MoveProps): string {\n  const { source, dest, prevDest, piece, promote, pos } = props\n  const { row: srow, column: scol } = source\n  const { row: drow, column: dcol } = dest\n\n  const pc: string = pieceString(promote ? demote(piece) : piece)\n\n  const dr: string = rowString(drow)\n  const dc: string = columnString(dcol)\n  let base: string\n\n  // 同~ のように表記するか\n  const isSame: boolean = prevDest?.row === drow && prevDest?.column === dcol\n  if (isSame) base = `同${pc}`\n  else base = `${dc}${dr}${pc}`\n\n  // 味方の同じ種類の駒が他にあれば取得し、dest に移動できるものをリストアップする\n  const sourcePoint = { row: srow, column: scol, piece }\n  const targettings: Point[] = findSamePieces(sourcePoint, pos).filter(p =>\n    getTargets(pos, p).some(\n      ({ row, column }) => row === drow && column === dcol\n    )\n  )\n\n  const isMulti: boolean = targettings.length > 0\n\n  // 持ち駒から打つ場合\n  // 他に dest に移動できる駒が存在すれば '打' をつける\n  if (srow === -1) {\n    if (isMulti) return `${base}打`\n    return base\n  }\n\n  if (\n    piece === Kei0 ||\n    piece === Kei1 ||\n    piece === Hisha0 ||\n    piece === Hisha1 ||\n    piece === Kaku0 ||\n    piece === Kaku1 ||\n    piece === Ryu0 ||\n    piece === Ryu1 ||\n    piece === Uma0 ||\n    piece === Uma1\n  )\n    base += additionalForTwo(props, targettings[0])\n  else if (\n    piece !== Gyoku0 &&\n    piece !== Gyoku1 &&\n    piece !== Fu0 &&\n    piece !== Fu1 &&\n    piece !== Kyou0 &&\n    piece !== Kyou1\n  )\n    base += additional(props, targettings)\n\n  // true → 成\n  // false → 不成\n  // undefined → 無印\n  // MoveProps を参照。\n  if (promote) base += '成'\n  // 成れる駒なら 不成 とする\n  else if (\n    promote === false && // undefined を弾いている\n    canPromote({ sourceRow: srow, destRow: drow, piece: piece })\n  )\n    base += '不成'\n\n  return base\n}\n\nfunction findSamePieces(point: Point, position: Position): Point[] {\n  const { row, column, piece } = point\n  const points: Point[] = []\n\n  const { turn, pos } = position\n  for (let r = 0; r <= 8; r++) {\n    for (let c = 0; c <= 8; c++) {\n      if (r === row && c === column) continue // 全く同じ駒は無視\n\n      const p = pos[r][c]\n      if (turn * p > 0 && p === piece) points.push({ row: r, column: c, piece })\n    }\n  }\n\n  return points\n}\n\nfunction additionalForTwo(\n  { source, dest, pos: { turn } }: MoveProps,\n  another?: Point\n): string {\n  if (!another) return ''\n  const { row: srow, column: scol } = source\n  const { row: drow } = dest\n  const { row: arow, column: acol } = another\n\n  if (srow === drow && arow !== drow) return '寄'\n  if (\n    (srow === drow && arow === drow) ||\n    (isAbove(srow, drow, turn) && isAbove(arow, drow, turn)) ||\n    (isBelow(srow, drow, turn) && isBelow(arow, drow, turn))\n  ) {\n    if (isLeft(scol, acol, turn)) return '左'\n    return '右'\n  }\n  if (isAbove(srow, arow, turn)) return '引'\n  return '上'\n}\n\nfunction additional(\n  { source, dest, pos: { turn } }: MoveProps,\n  targettings: Point[]\n): string {\n  if (targettings.length === 0) return ''\n\n  const { row: srow, column: scol } = source\n  const { row: drow, column: dcol } = dest\n\n  const moving = {\n    sameRow: srow === drow,\n    sameCol: scol === dcol,\n    below: isBelow(srow, drow, turn),\n    above: isAbove(srow, drow, turn),\n    left: isLeft(scol, dcol, turn),\n    right: isRight(scol, dcol, turn),\n  }\n\n  const another = {\n    sameRow: false,\n    below: false,\n    above: false,\n    left: false,\n    right: false,\n  }\n\n  for (let { row, column: col } of targettings) {\n    if (row === drow) another.sameRow = true\n    if (isBelow(row, drow, turn)) another.below = true\n    if (isAbove(row, drow, turn)) another.above = true\n    if (isLeft(col, dcol, turn)) another.left = true\n    if (isRight(col, dcol, turn)) another.right = true\n  }\n\n  if (moving.below && !another.below) return '上'\n  if (moving.below && moving.sameCol) return '直'\n  if (moving.above && !another.above) return '引'\n  if (moving.sameRow && !another.sameRow) return '寄'\n  if (moving.left && !another.left) return '左'\n  if (moving.right && !another.right) return '右'\n\n  if (moving.sameRow && moving.left) return '左寄'\n  if (moving.sameRow) return '右寄'\n\n  if (moving.below && moving.left) return '左上'\n  if (moving.below) return '右上'\n\n  if (moving.above && moving.left) return '左引'\n  return '右引'\n  // '引直' はありえない\n}\n\nfunction isBelow(srow: number, drow: number, turn: Turn): boolean {\n  return (srow - drow) * turn > 0\n}\nfunction isAbove(srow: number, drow: number, turn: Turn): boolean {\n  return (srow - drow) * turn < 0\n}\n\nfunction isLeft(scol: number, dcol: number, turn: Turn): boolean {\n  return (scol - dcol) * turn > 0\n}\nfunction isRight(scol: number, dcol: number, turn: Turn): boolean {\n  return (scol - dcol) * turn < 0\n}\n","import History, { isBranch, KifuComponent } from '../../model/kifu/History'\nimport Kifu from '../../model/kifu/Kifu'\nimport { Move } from '../../model/kifu/Move'\n\n/**\n * 棋譜の現在表示局面のMoveを返す\n * 開始局面は0なので、3手目を表示中なら3と3手目のMoveが返る\n * @param k Kif\n */\nexport default function (k: Kifu): Move {\n  let history: History = k.history\n  let moveOrBranch: KifuComponent = history.moves[history.index]\n\n  while (isBranch(moveOrBranch)) {\n    history = moveOrBranch.branches[moveOrBranch.index]\n    moveOrBranch = history.moves[history.index]\n  }\n\n  return moveOrBranch\n}\n","import Branch from '../../model/kifu/Branch'\nimport History, { isBranch, KifuComponent } from '../../model/kifu/History'\nimport Kifu from '../../model/kifu/Kifu'\nimport { Move } from '../../model/kifu/Move'\n\n/**\n * 棋譜に新しいMoveを追加する\n * @param old Kifu\n * @param m Move 追加する一手\n */\nexport default function (old: Kifu, m: Move): Kifu {\n  return {\n    meta: old.meta,\n    history: pushToHistory(old.history, m),\n  }\n}\n\nfunction pushToHistory(h: History, m: Move): History {\n  const lastIsCurrent: boolean = h.index === h.moves.length - 1\n  const last: KifuComponent = h.moves[h.index]\n\n  if (lastIsCurrent && isBranch(last))\n    return {\n      moves: h.moves\n        .slice(0, h.moves.length - 1)\n        .concat(pushToBranch(last, m, true)),\n      index: h.index,\n    }\n\n  const nextIndex: number = h.index + 1\n\n  if (lastIsCurrent)\n    return {\n      moves: h.moves.concat(m),\n      index: nextIndex,\n    }\n\n  const next: KifuComponent = h.moves[nextIndex]\n  const init: KifuComponent[] = h.moves.slice(0, nextIndex)\n\n  if (isBranch(next))\n    return {\n      moves: init.concat(pushToBranch(next, m, false)),\n      index: nextIndex,\n    }\n\n  // 追加しようとしてる Move が次と一緒ならインデックスだけ更新\n  if (moveEquals(m, next))\n    return {\n      moves: h.moves.slice(),\n      index: nextIndex,\n    }\n\n  const tail: KifuComponent[] = h.moves.slice(nextIndex, h.moves.length)\n  return {\n    moves: init.concat(createBranch(tail, m)),\n    index: nextIndex,\n  }\n}\n\nfunction pushToBranch(b: Branch, m: Move, recursive: boolean): Branch {\n  // 分岐の先頭は現在表示局面ではないので、再帰的に更新する\n  if (recursive)\n    return {\n      branches: b.branches.map((h: History, i: number) => {\n        if (i === b.index) return pushToHistory(h, m)\n        return h\n      }),\n      index: b.index,\n    }\n\n  const indexOfNewMove: number = b.branches.findIndex(h =>\n    moveEquals(h.moves[0] as Move, m)\n  )\n\n  // 追加しようとしてる Move がすでに分岐の先頭にある\n  if (indexOfNewMove !== -1)\n    return {\n      branches: b.branches.slice(),\n      index: indexOfNewMove,\n    }\n\n  return {\n    branches: b.branches.concat(toHistory([m])),\n    index: b.branches.length,\n  }\n}\n\nfunction createBranch(tail: KifuComponent[], m: Move): Branch {\n  return {\n    branches: [toHistory(tail), toHistory([m])],\n    index: 1,\n  }\n}\n\nfunction toHistory(c: KifuComponent[]): History {\n  return { moves: c, index: 0 }\n}\n\nfunction moveEquals(a: Move, b: Move): boolean {\n  return (\n    a.index === b.index &&\n    a.source.row === b.source.row &&\n    a.source.column === b.source.column &&\n    a.dest.row === b.dest.row &&\n    a.dest.column === b.dest.column &&\n    a.piece === b.piece &&\n    a.promote === b.promote\n  )\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Turn } from '../../../model/shogi/Turn'\n\n/**\n * 玉の位置を探す\n * @param pos number[][] 盤上の配置\n * @param turn Turn どっちの玉を探すか。先手玉を探したいときは Sente を渡す\n * @returns 見つかった場合 Point\n *          見つからなかった場合 undefined\n */\nexport default function (pos: number[][], turn: Turn): Point | undefined {\n  for (let r = 0; r < pos.length; r++) {\n    for (let c = 0; c < pos.length; c++) {\n      const piece: Piece = pos[r][c]\n      const isGyoku: boolean = Math.abs(piece) === Gyoku0\n      const isOwnersTurn: boolean = piece * turn > 0\n      if (isGyoku && isOwnersTurn) return { row: r, column: c, piece }\n    }\n  }\n}\n","import { Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../../handler/game/position'\nimport { getTargets } from '../getTargets'\nimport { find } from './algorithm'\n\n/**\n * points が attacker の駒の効きに入っているか\n * 王手放置・打ち歩詰めチェックに使用する\n * 入っている: true\n * 入っていない: false\n *\n * 例. 初期局面で先手の59玉に、後手の駒の効きがあるかを調べるとき\n * pos は初期局面\n * point は、{ row: 8, column: 4 }\n * attacker は Gote(-1)\n * を渡し、false が返る\n *\n * @param pos Position 配置\n * @param point Point 調べたい位置\n * @param attacker Turn 攻め手番\n * @param ignoreCheckLeaving boolean | undefined 王手放置チェックを無視するか\n *                           無視する(チェックしない): true\n *                           無視しない(チェックする): false | undefined\n *                           基本的に外から呼ぶ時は undefined で\n */\nexport default function isPointed(\n  pos: Position,\n  point: Point,\n  attacker: Turn,\n  ignoreCheckLeaving?: boolean\n): boolean {\n  for (let row = 0; row < pos.pos.length; row++) {\n    for (let column = 0; column < pos.pos.length; column++) {\n      const piece: Piece = pos.pos[row][column]\n      // 受け側の駒か、空マスならスキップ\n      if (piece * attacker <= 0) continue\n\n      // 攻め側の駒の targets に point が含まれていなかったらスキップ\n      const targets: Point[] = getTargets(pos, { row, column, piece })\n      const foundIndex: number = find(targets, point)\n      if (foundIndex === -1) continue\n\n      // 王手放置チェックをしないとき、\n      // 攻め側の駒が玉じゃないとき、\n      // 受け側の駒が玉の時は\n      // 次に動けるので true\n      if (\n        ignoreCheckLeaving ||\n        Math.abs(piece) !== Gyoku0 ||\n        (point.piece && Math.abs(point.piece) === Gyoku0)\n      )\n        return true\n\n      // 攻め側の駒が玉なので動かした結果、攻め側の玉が王手放置にならないか調べる\n      const moved = moveBoardOnly({\n        pos,\n        source: { row, column },\n        dest: { row: point.row, column: point.column },\n        piece,\n      })\n      if (isPointed(moved, point, -attacker as Turn, true)) continue\n      return true\n    }\n  }\n\n  return false\n}\n","import {\n  Empty,\n  Fu0,\n  Fu1,\n  Gin0,\n  Gin1,\n  Gyoku0,\n  Gyoku1,\n  Hisha0,\n  Hisha1,\n  Kaku0,\n  Kaku1,\n  Kei0,\n  Kei1,\n  Kin0,\n  Kin1,\n  Kyou0,\n  Kyou1,\n  Piece,\n} from './Piece'\nimport { Position } from './Position'\nimport { Gote, Sente, Turn } from './Turn'\n\nexport const HandicapKinds = {\n  hirate: '平手',\n  kyouOti: '香落ち', // 左香落ち\n  migiKyouOti: '右香落ち',\n  ryouKyouOti: '両香落ち',\n  kakuOti: '角落ち',\n  hishaOti: '飛車落ち',\n  hishaKyouOti: '飛車香落ち', // 飛車+左香\n  hishaRyouKyouOti: '飛車両香落ち',\n  nimaiOti: '二枚落ち',\n  sannmaiOti: '三枚落ち',\n  yonnmaiOti: '四枚落ち',\n  gomaiOti: '五枚落ち',\n  rokumaiOti: '六枚落ち',\n  nanamaiOti: '七枚落ち',\n  hatimaiOti: '八枚落ち',\n  kyuumaiOti: '九枚落ち',\n  juumaiOti: '十枚落ち',\n  ragyoku: '裸玉',\n}\n\nexport function positionFromKind(kind: string): Position {\n  const k = HandicapKinds\n  if (kind === k.hirate) return hirate()\n  if (kind === k.kyouOti) return kyouOti()\n  if (kind === k.migiKyouOti) return migiKyouOti()\n  if (kind === k.ryouKyouOti) return ryouKyouOti()\n  if (kind === k.kakuOti) return kakuOti()\n  if (kind === k.hishaOti) return hishaOti()\n  if (kind === k.hishaKyouOti) return hishaKyouOti()\n  if (kind === k.hishaRyouKyouOti) return hishaRyouKyouOti()\n  if (kind === k.nimaiOti) return nmaiOti(2)\n  if (kind === k.sannmaiOti) return nmaiOti(3)\n  if (kind === k.yonnmaiOti) return nmaiOti(4)\n  if (kind === k.gomaiOti) return nmaiOti(5)\n  if (kind === k.rokumaiOti) return nmaiOti(6)\n  if (kind === k.nanamaiOti) return nmaiOti(7)\n  if (kind === k.hatimaiOti) return nmaiOti(8)\n  if (kind === k.kyuumaiOti) return nmaiOti(9)\n  if (kind === k.juumaiOti) return nmaiOti(10)\n  if (kind === k.ragyoku) return ragyoku()\n  return hirate()\n}\n\nexport const hirate = () => toPosition({ pos: hiratePos() })\nexport const kyouOti = () => reps([0, 0])\nexport const migiKyouOti = () => reps([8, 0])\nexport const ryouKyouOti = () => reps([0, 0], [8, 0])\nexport const kakuOti = () => reps([1, 1])\nexport const hishaOti = () => reps([7, 1])\nexport const hishaKyouOti = () => reps([7, 1], [0, 0])\nexport const hishaRyouKyouOti = () => reps([7, 1], [0, 0], [8, 0])\nexport const nmaiOti = (n: number) => repsN(n)\nexport const ragyoku = () =>\n  handicapped(\n    // prettier-ignore\n    [\n      [Empty, Empty,  Empty, Empty, Gyoku1, Empty, Empty, Empty, Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty, Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty, Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty, Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty, Empty],\n      [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty, Empty],\n      [Fu0,   Fu0,    Fu0,   Fu0,   Fu0,    Fu0,   Fu0,   Fu0,   Fu0  ],\n      [Empty, Hisha0, Empty, Empty, Empty,  Empty, Empty, Kaku0, Empty],\n      [Kyou0, Kei0,   Gin0,  Kin0,  Gyoku0, Kin0,  Gin0,  Kei0,  Kyou0],\n    ]\n  )\n\n/**\n * 初期局を返す\n * column は reverse() されているので、\n * 飛車と角の位置が逆に見える\n * 棋譜との互換性を保つため。\n * ３三角 → pos[2][2]、\n * ３四飛 → pos[3][2]、\n * ７六歩 → pos[5][6] という感じで変換が楽\n */\nfunction hiratePos(): Piece[][] {\n  // prettier-ignore\n  return [\n    [Kyou1, Kei1,   Gin1,  Kin1,  Gyoku1, Kin1,  Gin1,  Kei1,   Kyou1],\n    [Empty, Kaku1,  Empty, Empty, Empty,  Empty, Empty, Hisha1, Empty],\n    [Fu1,   Fu1,    Fu1,   Fu1,   Fu1,    Fu1,   Fu1,   Fu1,    Fu1  ],\n    [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n    [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n    [Empty, Empty,  Empty, Empty, Empty,  Empty, Empty, Empty,  Empty],\n    [Fu0,   Fu0,    Fu0,   Fu0,   Fu0,    Fu0,   Fu0,   Fu0,    Fu0  ],\n    [Empty, Hisha0, Empty, Empty, Empty,  Empty, Empty, Kaku0,  Empty],\n    [Kyou0, Kei0,   Gin0,  Kin0,  Gyoku0, Kin0,  Gin0,  Kei0,   Kyou0],\n  ]\n}\n\ntype Tuple = [number, number]\nconst repsN = (n: number) => {\n  const r: Tuple[] = [\n    [1, 1],\n    [7, 1],\n  ]\n  if (n >= 3) r.push([0, 0])\n  if (n >= 4) r.push([8, 0])\n  if (n >= 5) r.push([1, 0])\n  if (n >= 6) r.push([7, 0])\n  if (n >= 7) r.push([2, 0])\n  if (n >= 8) r.push([6, 0])\n  if (n >= 9) r.push([3, 0])\n  if (n >= 10) r.push([5, 0])\n  return reps(...r)\n}\n\nfunction reps(...replacements: Tuple[]): Position {\n  const pos = hiratePos()\n  for (let [col, row] of replacements) {\n    pos[row][col] = Empty\n  }\n  return handicapped(pos)\n}\n\nfunction handicapped(pos: Piece[][]): Position {\n  return toPosition({ pos, turn: Gote })\n}\n\nfunction toPosition({ turn, pos }: { turn?: Turn; pos: Piece[][] }): Position {\n  return {\n    pos,\n    cap0: [0, 0, 0, 0, 0, 0, 0],\n    cap1: [0, 0, 0, 0, 0, 0, 0],\n    turn: turn || Sente,\n    moveCount: 0,\n  }\n}\n","export const Versions = {\n  latest: '1',\n  1: '1',\n}\n\nexport default interface Meta {\n  // 棋譜のバージョン\n  version: string\n\n  date?: {\n    // 開始日時\n    start?: Date\n    // 終了日時\n    end?: Date\n  }\n\n  // 表題とか棋戦名とか\n  title?: string\n\n  // 対局場所\n  place?: string\n\n  // 対局者\n  player: {\n    sente?: string // 先手or下手\n    gote?: string // 後手or上手\n  }\n\n  time?: {\n    // 先手の持ち時間(秒)\n    sente: number\n    // 後手の持ち時間(秒)\n    gote: number\n  }\n\n  // 手合割\n  handicap: string\n\n  // その他の情報\n  other?: Map<string, string>\n}\n","import { HandicapKinds, positionFromKind } from '../shogi/InitialPositions'\nimport { Position } from '../shogi/Position'\nimport History from './History'\nimport Meta, { Versions } from './Meta'\n\nexport default interface Kifu {\n  // 対局者などの対局情報\n  meta: Meta\n\n  // 棋譜\n  history: History\n}\n\nexport function newKifu(posKind: string = HandicapKinds.hirate): Kifu {\n  const initPos: Position = positionFromKind(posKind)\n  return {\n    meta: {\n      version: Versions.latest,\n      player: {},\n      handicap: posKind,\n    },\n    history: {\n      moves: [\n        {\n          index: 0,\n          str: '開始局面',\n          pos: initPos,\n          source: { row: -1, column: -1 }, // 盤上に存在しない場所にしておく\n          dest: { row: -1, column: -1 },\n          piece: 0,\n        },\n      ],\n      index: 0,\n    },\n  }\n}\n","import { action, computed, observable } from 'mobx'\nimport { canPromote, mustPromote, promote } from '../../handler/game/piece'\nimport { move } from '../../handler/game/position'\nimport { changeIndex } from '../../handler/kifu/changeIndex'\nimport { genKifuString } from '../../handler/kifu/genKifuString'\nimport getCurrent from '../../handler/kifu/getCurrent'\nimport pushMove from '../../handler/kifu/pushMove'\nimport { getTargets } from '../../lib/validatior/getTargets'\nimport { find } from '../../lib/validatior/utils/algorithm'\nimport filterTargets from '../../lib/validatior/utils/filterTargets'\nimport { ClickProps } from '../../model/events/ClickProps'\nimport { MoveProps } from '../../model/events/MoveProps'\nimport Kifu, { newKifu } from '../../model/kifu/Kifu'\nimport { Move } from '../../model/kifu/Move'\nimport Confirm from '../../model/shogi/Confirm'\nimport { Piece } from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Position } from '../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { GameState } from '../GameState'\n\nexport class DefaultGameState implements GameState {\n  @observable indexes: number[] = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  @observable selected: Point | null = null\n  @observable confirm: Confirm | null = null\n  @observable moveTargets: Point[] = []\n  @observable kifu: Kifu = newKifu()\n\n  @computed get currentMove(): Move {\n    return getCurrent(this.kifu)\n  }\n\n  @action reverse(): void {\n    this.indexes = this.indexes.slice().reverse()\n  }\n\n  @computed get isReversed(): boolean {\n    return this.indexes[0] === 9\n  }\n\n  @action clickPiece(p: ClickProps): void {\n    const sel: Point | null = this.selected\n    const turn: Turn = this.currentMove.pos.turn\n\n    // Confirm 画面なのに、成・不成以外がクリックされたらなにもしない\n    if (!!this.confirm && isPiece(p.clicked)) return\n\n    // 選択された駒をクリックしたら選択解除\n    if (!!sel && isPiece(p.clicked) && selectedAgain(sel, p)) {\n      this.selected = null\n      this.moveTargets = []\n      return\n    }\n\n    // 手番側の駒なら選択する\n    if (isPiece(p.clicked) && ownerIsTurn(p.clicked, turn)) {\n      const { row, column, clicked, i } = p\n      const point: Point = { row, column, piece: clicked, i }\n      this.selected = point\n      const targets = getTargets(this.currentMove.pos, point)\n      const filtered = filterTargets(this.currentMove.pos, point, targets)\n      this.moveTargets = filtered\n      return\n    }\n\n    // 選択された駒がない場合は、手番ではない方の駒or空白マスがクリックされた\n    // ということなので何もしない\n    // `|| sel.piece === undefined` の部分は\n    // この後のコードで TypeScript のチェックを楽にするため\n    if (!sel || !sel.piece) return\n\n    // 動けない場所がクリックされたらなにもしない\n    const foundIndex: number = find(this.moveTargets, p)\n    if (foundIndex === -1) return\n\n    const source: Point = { row: sel.row, column: sel.column }\n    const dest: Point = { row: p.row, column: p.column }\n\n    const moveAndUpdateState = (piece: Piece, promote?: boolean) => {\n      const moveProps: MoveProps = {\n        pos: this.currentMove.pos,\n        source,\n        dest,\n        prevDest: this.currentMove.dest,\n        piece,\n        promote,\n      }\n      const pos: Position = move(moveProps)\n      const kifuStr: string = genKifuString(moveProps)\n      const moveForKifu: Move = {\n        index: this.currentMove.index + 1,\n        str: kifuStr,\n        pos,\n        source,\n        dest,\n        piece,\n        promote,\n      }\n      this.setKifu(pushMove(this.kifu, moveForKifu))\n    }\n\n    // Confirm オブジェクトがクリックされたら動かす(成 or 不成の処理)\n    if (!isPiece(p.clicked)) {\n      const piece: Piece = p.promote ? p.clicked.promoted : p.clicked.preserved\n      moveAndUpdateState(piece, p.promote)\n      return\n    }\n\n    // 成を選択できるか\n    const cp: boolean = canPromote({\n      sourceRow: sel.row,\n      destRow: p.row,\n      piece: sel.piece,\n    })\n\n    // 強制的に成る必要があるか\n    const mp: boolean = mustPromote(sel.piece, p.row)\n\n    // 成・不成の選択ができるように、Confirm オブジェクトをセット\n    if (cp && !mp) {\n      this.confirm = {\n        promoted: promote(sel.piece),\n        preserved: sel.piece,\n        row: p.row,\n        column: p.column,\n      }\n      return\n    }\n\n    const piece: Piece = mp ? promote(sel.piece) : sel.piece\n    moveAndUpdateState(piece, mp || undefined)\n  }\n\n  @action clickKifu(moveCount: number, branchIndex?: number): void {\n    this.setKifu(changeIndex(this.kifu, moveCount, branchIndex))\n  }\n\n  @action setKifu(kifu: Kifu): void {\n    this.selected = null\n    this.confirm = null\n    this.moveTargets = []\n    this.kifu = kifu\n  }\n}\n\nfunction isPiece(pc: Piece | Confirm): pc is Piece {\n  return typeof pc === 'number'\n}\n\nfunction ownerIsTurn(p: Piece, t: Turn): boolean {\n  return (p < 0 && t === Gote) || (p > 0 && t === Sente)\n}\n\nfunction selectedAgain(sel: Point, cp: ClickProps): boolean {\n  return (\n    sel.row === cp.row &&\n    sel.column === cp.column &&\n    sel.piece === cp.clicked &&\n    sel.i === cp.i\n  )\n}\n","import { Fu0, Gyoku0, Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { Position } from '../../../model/shogi/Position'\nimport { Gote, Sente, Turn } from '../../../model/shogi/Turn'\nimport { moveBoardOnly } from '../../../handler/game/position'\nimport { getTargets } from '../getTargets'\nimport getGyokuPoint from './getGyokuPoint'\nimport isPointed from './isPointed'\n\n/**\n * 王手放置か打ち歩詰めだったら弾く\n * @param pos Position 動かす前の配置\n * @param point Point 動かしたい駒の場所情報\n * @param targets point を getTargets で取得したリスト\n * @returns targets にフィルターをかけた結果\n */\nexport default function filter(\n  pos: Position,\n  point: Point,\n  targets: Point[]\n): Point[] {\n  if (!point.piece) throw new Error('piece id is needed')\n\n  const turn: Turn = point.piece > 0 ? Sente : Gote\n\n  // 手番側の玉がある場所。駒を動かしたとき王手放置にならないようにメモしておく\n  let gp = getGyokuPoint(pos.pos, turn)\n\n  // 王手放置・打ち歩詰めチェックを通った場所を入れていく\n  const filtered: Point[] = []\n\n  for (let i = 0; i < targets.length; i++) {\n    // 盤上だけ動かす\n    const moved: Position = moveBoardOnly({\n      pos: pos,\n      source: { row: point.row, column: point.column },\n      dest: { row: targets[i].row, column: targets[i].column },\n      piece: point.piece as Piece,\n    })\n\n    // 玉自身の動きチェックをしていたら、玉が動くので、再セット\n    if (point.piece && Math.abs(point.piece) === Gyoku0)\n      gp = getGyokuPoint(moved.pos, turn)\n\n    // 王手放置ならpushしない\n    const isOute = gp !== undefined && isPointed(moved, gp, -turn as Turn)\n    if (isOute) continue\n\n    // 打ち歩詰めチェック\n    const isFu: boolean = Math.abs(point.piece) === Fu0\n    const isFromCapture: boolean = point.row === -1\n    const enemyGyoku = getGyokuPoint(moved.pos, -turn as Turn)\n    // 打った歩による王手である\n    if (\n      isFu &&\n      isFromCapture &&\n      enemyGyoku !== undefined &&\n      isPointed(moved, enemyGyoku, turn)\n    ) {\n      // 打った歩が次に取られるか\n      const fuIsPointed = isPointed(moved, targets[i], -turn as Turn)\n\n      // 相手玉が逃げられる場所があるか\n      const enemyGyokuTargets = getTargets(moved, enemyGyoku)\n      const filteredEnemyGyokuTargets = filter(\n        moved,\n        enemyGyoku,\n        enemyGyokuTargets\n      )\n\n      // 打った歩が取られない && 逃げ場所がないとき、打ち歩詰めである\n      if (!fuIsPointed && filteredEnemyGyokuTargets.length === 0) continue\n    }\n\n    // OK\n    filtered.push(targets[i])\n  }\n\n  return filtered\n}\n","import { observable, observe } from 'mobx'\nimport { createContext } from 'react'\nimport { Connected } from '../model/engine/State'\nimport { Move } from '../model/kifu/Move'\nimport { Config } from './Config'\nimport { DisplayState } from './DisplayState'\nimport { EngineState } from './EngineState'\nimport { GameState } from './GameState'\nimport { DefaultConfig } from './impl/Config'\nimport { DefaultDisplayState } from './impl/DisplayState'\nimport { DefaultEngineState } from './impl/EngineState'\nimport { DefaultGameState } from './impl/GameState'\n\nexport interface Store {\n  gameState: GameState\n  engineState: EngineState\n  displayState: DisplayState\n  config: Config\n\n  /**\n   * 将棋エンジンに対して setPosition を実行する\n   * @param move move が渡されなかった場合 gameState から局面を取得し実行する\n   *             move を渡さないのは connect 実行後に一度だけの想定\n   */\n  updatePosition(move?: Move): Promise<void>\n}\n\nclass DefaultStore implements Store {\n  constructor() {\n    this.engineState.setServerURL(this.config.serverURL)\n\n    // gameState で現在局面に変更があったら、将棋エンジンに局面をセットする\n    observe(this.gameState, 'currentMove', change =>\n      this.updatePosition(change.newValue)\n    )\n\n    // config の serverURL に変更があったら、engineState の serverURL を更新する\n    observe(this.config, 'serverURL', change =>\n      this.engineState.setServerURL(change.newValue)\n    )\n  }\n\n  @observable gameState: GameState = new DefaultGameState()\n  @observable engineState: EngineState = new DefaultEngineState()\n  @observable displayState: DisplayState = new DefaultDisplayState()\n  @observable config: Config = new DefaultConfig()\n\n  async updatePosition(move?: Move): Promise<void> {\n    const setPositionExecutable: boolean = this.engineState.state >= Connected\n    if (!setPositionExecutable) return\n\n    const m: Move = move || this.gameState.currentMove\n    this.engineState.updatePosition(m.pos)\n  }\n}\n\nexport const defaultStore: () => Store = () => new DefaultStore()\nexport const StoreContext = createContext<Store>(defaultStore())\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { genKifuString } from '../../../handler/kifu/genKifuString'\nimport { StoreContext } from '../../../store/Store'\nimport './Columns.scss'\nimport Point from '../../../model/shogi/Point'\n\nconst Columns: FC = () => {\n  const { engineState, gameState } = React.useContext(StoreContext)\n  const { result } = engineState\n  if (!result) return <div />\n\n  const columns = result.map(i => {\n    let prevDest: Point = gameState.currentMove.dest\n    const moves = i.moves.map((m, n) => {\n      m.prevDest = prevDest\n      const kifu = genKifuString(m)\n      prevDest = m.dest\n      // TODO: key\n      return (\n        <div key={n} className=\"EngineInfoRowContent\">\n          {kifu}\n        </div>\n      )\n    })\n\n    return (\n      <div key={i.id} className=\"EngineInfoColumn\">\n        <div className=\"EngineInfoRow EngineInfoRowContainer\">\n          <div className=\"EngineInfoRowLabel\">score</div>\n          <div className=\"EngineInfoRowContent Center\">{i.score}</div>\n        </div>\n        <div className=\"EngineInfoRow EngineInfoRowContainer\">\n          <div className=\"EngineInfoRowLabel\">読み</div>\n          {moves}\n        </div>\n      </div>\n    )\n  })\n\n  return <>{columns}</>\n}\n\nexport default observer(Columns)\n","import React, { FC } from 'react'\nimport Columns from './Columns'\nimport './SideInfo.scss'\n\nconst SideInfo: FC = () => {\n  return (\n    <div className=\"EngineSideInfo\">\n      <div className=\"EngineSideInfoContainer\">\n        <Columns />\n      </div>\n    </div>\n  )\n}\n\nexport default SideInfo\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useEffect, useRef } from 'react'\nimport { StoreContext } from '../../store/Store'\nimport './WidthController.scss'\n\nconst Setting: FC = () => {\n  const { displayState, config } = React.useContext(StoreContext)\n  const displayStateRef = useRef(displayState)\n  const configRef = useRef(config)\n\n  const resizeOn = () => displayState.setResizing(true)\n  const resizeOff = () => {\n    const ds = displayStateRef.current\n    if (ds.resizing) window.getSelection()?.removeAllRanges()\n    displayStateRef.current.setResizing(false)\n  }\n  const onMove = (e: MouseEvent) => {\n    const displayState = displayStateRef.current\n    if (!displayState.resizing) return\n    const config = configRef.current\n\n    const container = document.getElementById('root') as HTMLDivElement\n    const containerWidth = container.clientWidth\n    const pos = containerWidth - e.clientX\n    if (pos <= 0) config.setAppWidth()\n    else config.setAppWidth(containerWidth - pos * 2)\n  }\n\n  useEffect(() => {\n    document.addEventListener('mouseup', () => resizeOff())\n    document.addEventListener('mousemove', e => onMove(e))\n  }, [])\n\n  return <div className=\"WidthController\" onMouseDown={resizeOn} />\n}\n\nexport default observer(Setting)\n","import React, { FC } from 'react'\nimport './Mockup.scss'\n\ninterface Props {\n  onClick: () => Promise<void>\n}\n\nconst CloseButton: FC<Props> = (props: Props) => {\n  const width = 20\n  const one = line(0, 0, width, width)\n  const two = line(width, 0, 0, width)\n\n  return (\n    <div onClick={() => props.onClick()}>\n      <svg width={width} height={width} className=\"MockupCloseButton\">\n        {one}\n        {two}\n      </svg>\n    </div>\n  )\n\n  function line(x1: number, y1: number, x2: number, y2: number) {\n    return (\n      <line x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"black\" strokeWidth=\"2\" />\n    )\n  }\n}\n\nexport default CloseButton\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport './Button.scss'\n\nexport interface Props {\n  label: string\n  onClick: () => Promise<void>\n}\n\nconst Button: FC<Props> = (props: Props) => {\n  return (\n    <button className=\"FormButton\" onClick={() => props.onClick()}>\n      {props.label}\n    </button>\n  )\n}\n\nexport default observer(Button)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Button as OptionButton } from '../../../../model/engine/Optoin'\nimport Button from '../../../form/Button'\nimport './Buttons.scss'\n\nexport interface Props {\n  buttons: Map<string, OptionButton>\n  sbclient: ShogiBoardClient\n}\n\nconst Buttons: FC<Props> = (props: Props) => {\n  const buttons = Array.from(props.buttons)\n  const elms: JSX.Element[] = buttons.map(([name, option]) => {\n    const onClick = () => props.sbclient.updateButton(option)\n    return <Button key={name} label={name} onClick={onClick} />\n  })\n\n  return <div className=\"OptionButton\">{elms}</div>\n}\n\nexport default observer(Buttons)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport './Check.scss'\n\nexport interface Props {\n  label: string\n  value: boolean\n  name: string\n  onChange: (b: boolean) => Promise<void>\n}\n\nconst Check: FC<Props> = (props: Props) => {\n  const { label, value, name } = props\n  const id = `FormCheck-${name}`\n\n  return (\n    <div className=\"FormCheck\">\n      <span>{label}</span>\n      <div className=\"FormCheckToggle\">\n        <input\n          id={id}\n          name={id}\n          type=\"checkbox\"\n          onChange={e => props.onChange(e.target.checked)}\n          checked={value}\n        />\n        <label htmlFor={id}>\n          <div\n            className=\"ToggleSwitch\"\n            data-checked=\"ON\"\n            data-unchecked=\"OFF\"\n          />\n        </label>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(Check)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Check as OptionCheck } from '../../../../model/engine/Optoin'\nimport Check from '../../../form/Check'\n\nexport interface Props {\n  checks: Map<string, OptionCheck>\n  sbclient: ShogiBoardClient\n}\n\nconst Checks: FC<Props> = (props: Props) => {\n  const checks = Array.from(props.checks)\n  const elms: JSX.Element[] = checks.map(([name, option]) => {\n    const onChange = (b: boolean) => {\n      option.setValue(b)\n      return props.sbclient.updateCheck(option)\n    }\n\n    return (\n      <Check\n        key={name}\n        label={name}\n        name={name}\n        value={option.value}\n        onChange={onChange}\n      />\n    )\n  })\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Checks)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\n\nexport interface Props {\n  option: OptionRange\n  sbclient: ShogiBoardClient\n}\n\nconst Range: FC<Props> = (props: Props) => {\n  const { name, value, inputValue, min, max } = props.option\n  // inputValue が Number && inRange のとき、 val に値をセットするようにしているため\n  // val と inputValue が一致していれば正しい値\n  const isValid: boolean = value.toString() === inputValue\n  const className: string =\n    'FormTextInput' + (isValid ? '' : ' FormTextInvalid')\n  const labelText: string = `${name}(${min}~${max})`\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { option, sbclient } = props\n    option.setValue(e.target.value)\n    return sbclient.updateRange(option)\n  }\n\n  return (\n    <div className=\"FormText\">\n      <input\n        className={className}\n        type=\"text\"\n        value={inputValue}\n        placeholder=\" \"\n        onChange={onChange}\n        required\n        min={min}\n        max={max}\n      />\n      <label>{labelText}</label>\n    </div>\n  )\n}\n\nexport default observer(Range)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Range as OptionRange } from '../../../../model/engine/Optoin'\nimport Range from './Range'\n\nexport interface Props {\n  ranges: Map<string, OptionRange>\n  sbclient: ShogiBoardClient\n}\n\nconst Ranges: FC<Props> = (props: Props) => {\n  const { ranges, sbclient } = props\n\n  const elms: JSX.Element[] = Array.from(ranges).map(([name, option]) => (\n    <Range key={name} option={option} sbclient={sbclient} />\n  ))\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Ranges)\n","import { observer } from 'mobx-react-lite'\nimport React, { ChangeEvent, FC } from 'react'\nimport './Select.scss'\n\nexport interface Props {\n  label: string\n  value: string\n  options: string[]\n  onChange: (s: string) => Promise<void>\n}\n\nconst Select: FC<Props> = (props: Props) => {\n  const { label, value, options } = props\n  const opts = options.map((value: string, i: number) => (\n    <option key={i} value={value}>\n      {value}\n    </option>\n  ))\n\n  const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    props.onChange(e.target.value)\n  }\n\n  return (\n    <div className=\"FormSelectContainer\">\n      <label>{label}</label>\n      <div className=\"FormSelect SelectTriangle\">\n        <select onChange={onChange} value={value} required>\n          {opts}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(Select)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Select as OptionSelect } from '../../../../model/engine/Optoin'\nimport Select from '../../../form/Select'\n\nexport interface Props {\n  selects: Map<string, OptionSelect>\n  sbclient: ShogiBoardClient\n}\n\nconst Selects: FC<Props> = (props: Props) => {\n  const selects = Array.from(props.selects)\n\n  const elms: JSX.Element[] = selects.map(([name, option]) => {\n    const onChange = (s: string) => {\n      option.setValue(s)\n      return props.sbclient.updateSelect(option)\n    }\n\n    return (\n      <Select\n        key={name}\n        label={name}\n        value={option.value}\n        options={option.vars}\n        onChange={onChange}\n      />\n    )\n  })\n\n  return <div>{elms}</div>\n}\n\nexport default observer(Selects)\n","import { observer } from 'mobx-react-lite'\nimport React, { ChangeEvent, FC } from 'react'\nimport './Text.scss'\n\nexport interface Props {\n  value: string\n  label: string\n  onChange: (s: string) => Promise<void>\n  allowEmpty?: boolean\n  placeholder?: string\n}\n\nconst Text: FC<Props> = (props: Props) => {\n  const { value, label, allowEmpty, placeholder } = props\n\n  const classes = ['FormTextInput']\n  if (!allowEmpty && value === '') classes.push('FormTextInvalid')\n  const className: string = classes.join(' ')\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    props.onChange(e.target.value)\n  }\n\n  return (\n    <div className=\"FormText\">\n      <input\n        className={className}\n        type=\"text\"\n        value={value}\n        placeholder={placeholder || ' '}\n        onChange={onChange}\n        required\n      />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default observer(Text)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { ShogiBoardClient } from '../../../../infrastructure/ShogiBoardClient'\nimport { Text as OptionText } from '../../../../model/engine/Optoin'\nimport Text from '../../../form/Text'\n\nexport interface Props {\n  texts: Map<string, OptionText>\n  sbclient: ShogiBoardClient\n}\n\nconst Texts: FC<Props> = (props: Props) => {\n  const texts = Array.from(props.texts)\n\n  const strElms: JSX.Element[] = texts.map(([name, option]) => {\n    const onChange = (s: string) => {\n      option.setValue(s)\n      return props.sbclient.updateText(option)\n    }\n\n    return (\n      <Text key={name} label={name} value={option.value} onChange={onChange} />\n    )\n  })\n\n  return <div>{strElms}</div>\n}\n\nexport default observer(Texts)\n","import interval from 'interval-promise'\nimport { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Info } from '../../../model/engine/Info'\nimport { Thinking } from '../../../model/engine/State'\nimport { EngineState } from '../../../store/EngineState'\nimport { Store, StoreContext } from '../../../store/Store'\nimport './Detail.scss'\nimport Buttons from './form/Buttons'\nimport Checks from './form/Checks'\nimport Ranges from './form/Ranges'\nimport Selects from './form/Selects'\nimport Texts from './form/Texts'\n\nconst GET_RESULT_INTERVAL = 1000 // ms\n\nconst Detail: FC = () => {\n  const { gameState, displayState, engineState }: Store =\n    React.useContext(StoreContext)\n  const { current, options, sbclient }: EngineState = engineState\n  if (!current || !options) return <div />\n\n  const { buttons, checks, ranges, selects, texts } = options\n\n  const disconnect = () => engineState.disconnect()\n  const start = () =>\n    engineState\n      .startThinking()\n      .then(() => displayState.closeMockup())\n      .then(fetchInterval)\n      .catch(e => console.error(e))\n\n  const disconnectBtn = (\n    <button className=\"ButtonDisconnect\" onClick={disconnect}>\n      接続解除\n    </button>\n  )\n\n  const startBtn = (\n    <button className=\"ButtonStartThinking\" onClick={start}>\n      思考開始\n    </button>\n  )\n\n  return (\n    <div className=\"DetailContainer\">\n      <h1 className=\"EngineName\">{current}</h1>\n      {disconnectBtn}\n      {startBtn}\n      <h2 className=\"EngineOption\">オプション</h2>\n      <Buttons buttons={buttons} sbclient={sbclient} />\n      <Checks checks={checks} sbclient={sbclient} />\n      <Ranges ranges={ranges} sbclient={sbclient} />\n      <Selects selects={selects} sbclient={sbclient} />\n      <Texts texts={texts} sbclient={sbclient} />\n      {disconnectBtn}\n      {startBtn}\n    </div>\n  )\n\n  function fetchInterval(): Promise<void> {\n    // 思考を開始したら、思考結果を定期的に取得する\n    return interval(async (_, stop) => {\n      const { current, state, sbclient } = engineState\n      if (!current || state !== Thinking) {\n        stop()\n        return\n      }\n\n      try {\n        const result: Info[] = await sbclient.getResult(gameState.currentMove)\n        await engineState.setResult(result)\n      } catch (e) {\n        console.error(e)\n      }\n    }, GET_RESULT_INTERVAL)\n  }\n}\n\nexport default observer(Detail)\n","import React, { FC } from 'react'\nimport './Loader.scss'\n\nconst Loader: FC = () => {\n  return (\n    <div className=\"Loader sk-fading-circle\">\n      <div className=\"sk-circle1 sk-circle\" />\n      <div className=\"sk-circle2 sk-circle\" />\n      <div className=\"sk-circle3 sk-circle\" />\n      <div className=\"sk-circle4 sk-circle\" />\n      <div className=\"sk-circle5 sk-circle\" />\n      <div className=\"sk-circle6 sk-circle\" />\n      <div className=\"sk-circle7 sk-circle\" />\n      <div className=\"sk-circle8 sk-circle\" />\n      <div className=\"sk-circle9 sk-circle\" />\n      <div className=\"sk-circle10 sk-circle\" />\n      <div className=\"sk-circle11 sk-circle\" />\n      <div className=\"sk-circle12 sk-circle\" />\n    </div>\n  )\n}\n\nexport default Loader\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useEffect, useRef } from 'react'\nimport { Connecting, NotConnected, State } from '../../../model/engine/State'\nimport { Store } from '../../../store/Store'\nimport { StoreContext } from '../../../store/Store'\nimport Loader from '../../util/Loader'\nimport './List.scss'\n\nconst List: FC = () => {\n  const store: Store = React.useContext(StoreContext)\n  const { engineState } = store\n  const latestEngineState = useRef(engineState)\n  const { names, current, state } = engineState\n\n  useEffect(() => {\n    const engineState = latestEngineState.current\n    engineState.sbclient\n      .init()\n      .then((list: string[]) => engineState.setNames(list))\n      .catch(err => {\n        const msg = [\n          '接続に失敗しました。以下を確認してください。',\n          '1. サーバーが起動しているか',\n          '2. サーバーのURLが正しいか',\n          '3. サーバーのログを確認し、エラー等が出ていないか',\n          '4. サーバーで将棋エンジンの実行パスを設定したか',\n          '5. 将棋エンジンが実行可能であるか',\n        ].join('\\n')\n        console.error(err)\n        engineState.disconnect()\n        alert(msg)\n      })\n  }, [])\n\n  if (names.length === 0)\n    return (\n      <div className=\"ListEngineName\">\n        <span>利用可能な将棋エンジンが設定されていません</span>\n      </div>\n    )\n\n  const engineNames = names.map((name, i) => {\n    const isCurrent: boolean = name === current\n    const loading: boolean = isCurrent && state === Connecting\n    const loader = loading ? <Loader /> : undefined\n    const onClick = () => setCurrentEngine(name, state)\n    return (\n      <div className=\"ListEngineName\" key={i} onClick={onClick}>\n        {loader}\n        <span>{name}</span>\n      </div>\n    )\n  })\n\n  return <>{engineNames}</>\n\n  async function setCurrentEngine(name: string, state: State): Promise<void> {\n    if (state !== NotConnected) return\n    await engineState.connect(name)\n    await store.updatePosition().catch(e => console.error(e))\n  }\n}\n\nexport default observer(List)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Connecting, NotConnected } from '../../../model/engine/State'\nimport { EngineState } from '../../../store/EngineState'\nimport { Store, StoreContext } from '../../../store/Store'\nimport CloseButton from '../../util/CloseButton'\nimport Detail from './Detail'\nimport List from './List'\n\nconst Controller: FC = () => {\n  const { engineState, displayState }: Store = React.useContext(StoreContext)\n  const { state }: EngineState = engineState\n\n  // 接続前なら将棋エンジンの一覧画面を出す\n  const isList: boolean = state === NotConnected || state === Connecting\n  const child: JSX.Element = isList ? <List /> : <Detail />\n\n  const onClick = () => displayState.closeMockup()\n\n  return (\n    <div className=\"Mockup\">\n      <CloseButton onClick={onClick} />\n      {child}\n    </div>\n  )\n}\n\nexport default observer(Controller)\n","import History, { isBranch, KifuComponent } from '../../model/kifu/History'\nimport Kifu from '../../model/kifu/Kifu'\n\nexport function getAsString(k: Kifu): string {\n  if (k.history.moves.length < 1) return ''\n  return getRec({\n    moves: k.history.moves.slice(1),\n    index: k.history.index,\n  })\n}\n\nfunction getRec(h: History): string {\n  return h.moves\n    .map((kc: KifuComponent) =>\n      isBranch(kc) ? getRec(kc.branches[kc.index]) : `${kc.index} ${kc.str}`\n    )\n    .join('\\n')\n}\n","export interface Success<T> {\n  value: T\n  next: string\n}\nexport type ParseResult<T> = Success<T> | null\n\nexport type ParserFunc<T> = (s: string) => ParseResult<T>\nexport type Parser<T> = {\n  parse: ParserFunc<T>\n  map<U>(f: (t: T) => U): Parser<U>\n  comb<U>(right: Parser<U>): Parser<[T, U]>\n  left<U>(right: Parser<U>): Parser<T>\n  right<U>(right: Parser<U>): Parser<U>\n  or(parser: Parser<T>): Parser<T>\n  fallback(value: T): Parser<T>\n  failif(cb: (v: T) => boolean): Parser<T>\n}\n\nexport function Parser<T>(pf: ParserFunc<T>): Parser<T> {\n  return {\n    parse: pf,\n\n    map<U>(f: (t: T) => U): Parser<U> {\n      return Parser(input => {\n        const result = pf(input)\n        if (!result) return null\n        return { value: f(result.value), next: result.next }\n      })\n    },\n\n    comb<U>(right: Parser<U>): Parser<[T, U]> {\n      return Parser(input => {\n        const l = pf(input)\n        if (!l) return null\n        const r = right.parse(l.next)\n        if (!r) return null\n        return { value: [l.value, r.value], next: r.next }\n      })\n    },\n\n    left<U>(right: Parser<U>): Parser<T> {\n      return Parser(input => {\n        const l = pf(input)\n        if (!l) return null\n        const r = right.parse(l.next)\n        if (!r) return null\n        return { value: l.value, next: r.next }\n      })\n    },\n\n    right<U>(right: Parser<U>): Parser<U> {\n      return Parser(input => {\n        const l = pf(input)\n        if (!l) return null\n        const r = right.parse(l.next)\n        if (!r) return null\n        return { value: r.value, next: r.next }\n      })\n    },\n\n    or(parser: Parser<T>): Parser<T> {\n      return Parser(input => pf(input) ?? parser.parse(input))\n    },\n\n    fallback(value: T): Parser<T> {\n      return Parser(input => pf(input) ?? success(value, input))\n    },\n\n    failif(cb: (v: T) => boolean): Parser<T> {\n      return Parser(input => {\n        const r = pf(input)\n        if (!r || cb(r.value)) return null\n        return r\n      })\n    },\n  }\n}\n\nexport function success<T>(value: T, next: string): Success<T> {\n  return { value, next }\n}\n\nexport function successful<T>(value: T): Parser<T> {\n  return Parser(input => ({ value, next: input }))\n}\n\nconst ws = [' ', '\\t', '\\r', '\\n']\nconst full = ws.concat('　') // 全角空白ありVer\nexport const space: Parser<string> = rep(oneOf(ws)).map(arr => arr.join(''))\nexport const fspace: Parser<string> = rep(oneOf(full)).map(arr => arr.join(''))\n\nexport function spacing<T>(parser: Parser<T>): Parser<T> {\n  return space.right(parser).left(space)\n}\n\nexport const s = (s: string) =>\n  Parser(input => {\n    if (!input.startsWith(s)) return null\n    return { value: s, next: input.substring(s.length) }\n  })\n\nexport const ss = (str: string) => spacing(s(str))\nexport const fss = (str: string) => fspace.right(s(str)).left(fspace)\n\n// until が来るまでの文字列をパースする\nexport function literal(until: Parser<string> = oneOf(ws)): Parser<string> {\n  return Parser(s => {\n    if (s.length === 0) return null\n    for (let i = 0; i < s.length; i++) {\n      if (until.parse(s[i])) return success(s.slice(0, i), s.substring(i))\n    }\n    return success(s, '')\n  })\n}\n\nexport function rep<T>(parser: Parser<T>): Parser<T[]> {\n  return Parser(input => {\n    const value: T[] = []\n    let next: string = input\n    while (true) {\n      const result: ParseResult<T> = parser.parse(next)\n      if (!result) break\n      value.push(result.value)\n      next = result.next\n    }\n    return { value, next }\n  })\n}\n\nexport function repsep<T>(parser: Parser<T>, sep: Parser<string>): Parser<T[]> {\n  return parser\n    .comb(rep(sep.right(parser)))\n    .map(([a, b]) => {\n      const v = [a]\n      for (let i = 0; i < b.length; i++) v.push(b[i])\n      return v\n    })\n    .fallback([])\n}\n\nexport function oneOf(s: string[]): Parser<string> {\n  return Parser(input => {\n    if (input.length === 0) return null\n    for (let i = 0; i < s.length; i++) {\n      if (s[i].length !== 1)\n        throw new Error(\n          'oneOfの引数にはには1文字だけで構成された配列を渡してください'\n        )\n\n      if (input[0] === s[i])\n        return {\n          value: input[0],\n          next: input.substring(1),\n        }\n    }\n    return null\n  })\n}\n","import {\n  Fu0,\n  Gin0,\n  Gyoku0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  NariGin0,\n  NariKei0,\n  NariKyou0,\n  Piece,\n  Ryu0,\n  To0,\n  Uma0,\n} from '../../../model/shogi/Piece'\nimport { Turn } from '../../../model/shogi/Turn'\nimport { Parser, rep, s, ss, success, repsep } from '../parser'\n\nexport function piece(turn: Turn): Parser<Piece> {\n  return Parser(s => {\n    if (s.length === 0) return null\n    const st = (t: string) => s.startsWith(t)\n    const suc = (p: Piece, n: number) => success(p * turn, s.substring(n))\n    if (st('歩')) return suc(Fu0, 1)\n    if (st('香')) return suc(Kyou0, 1)\n    if (st('桂')) return suc(Kei0, 1)\n    if (st('銀')) return suc(Gin0, 1)\n    if (st('金')) return suc(Kin0, 1)\n    if (st('玉')) return suc(Gyoku0, 1)\n    if (st('角')) return suc(Kaku0, 1)\n    if (st('飛')) return suc(Hisha0, 1)\n    if (st('と')) return suc(To0, 1)\n    if (st('成香')) return suc(NariKyou0, 2)\n    if (st('杏')) return suc(NariKyou0, 1)\n    if (st('成桂')) return suc(NariKei0, 2)\n    if (st('圭')) return suc(NariKei0, 1)\n    if (st('成銀')) return suc(NariGin0, 2)\n    if (st('全')) return suc(NariGin0, 1)\n    if (st('馬')) return suc(Uma0, 1)\n    if (st('龍') || st('竜')) return suc(Ryu0, 1)\n    return null\n  })\n}\n\nexport const row: Parser<number> = Parser(input => {\n  const s = input[0]\n  const next = () => input.substring(1)\n  if (s === '一' || s === '１' || s === '1') return success(0, next())\n  if (s === '二' || s === '２' || s === '2') return success(1, next())\n  if (s === '三' || s === '３' || s === '3') return success(2, next())\n  if (s === '四' || s === '４' || s === '4') return success(3, next())\n  if (s === '五' || s === '５' || s === '5') return success(4, next())\n  if (s === '六' || s === '６' || s === '6') return success(5, next())\n  if (s === '七' || s === '７' || s === '7') return success(6, next())\n  if (s === '八' || s === '８' || s === '8') return success(7, next())\n  if (s === '九' || s === '９' || s === '9') return success(8, next())\n  return null\n})\n\nexport const column: Parser<number> = Parser(input => {\n  const s = input[0]\n  const next = () => input.substring(1)\n  if (s === '１' || s === '1') return success(0, next())\n  if (s === '２' || s === '2') return success(1, next())\n  if (s === '３' || s === '3') return success(2, next())\n  if (s === '４' || s === '4') return success(3, next())\n  if (s === '５' || s === '5') return success(4, next())\n  if (s === '６' || s === '6') return success(5, next())\n  if (s === '７' || s === '7') return success(6, next())\n  if (s === '８' || s === '8') return success(7, next())\n  if (s === '９' || s === '9') return success(8, next())\n  return null\n})\n\nexport const digit: Parser<number> = Parser(input => {\n  const s = input[0]\n  const next = input.substring(1)\n  if (s === '０' || s === '0') return success(0, next)\n  if (s === '１' || s === '1') return success(1, next)\n  if (s === '２' || s === '2') return success(2, next)\n  if (s === '３' || s === '3') return success(3, next)\n  if (s === '４' || s === '4') return success(4, next)\n  if (s === '５' || s === '5') return success(5, next)\n  if (s === '６' || s === '6') return success(6, next)\n  if (s === '７' || s === '7') return success(7, next)\n  if (s === '８' || s === '8') return success(8, next)\n  if (s === '９' || s === '9') return success(9, next)\n  return null\n})\n\nexport const integer: Parser<number> = rep(digit)\n  .failif(arr => arr.length === 0)\n  .map(arr => {\n    let n = 0\n    for (let i = 0; i < arr.length; i++) {\n      n *= 10\n      n += arr[i]\n    }\n    return n\n  })\n\n// hh:mm:ss を秒に変換する\n// ss、mm:ss も OK\nexport const time: Parser<number> = repsep(integer, s(':'))\n  .failif(n => n.length === 0 || n.length > 3)\n  .map(nums => {\n    let sec: number = 0\n    for (let i = 0; i < nums.length; i++) {\n      sec *= 60\n      sec += nums[i]\n    }\n    return sec\n  })\n\n// 持ち時間：各６時間\n// のような文字列をパースし、秒に変換する\n// `各` はあってもなくても良い\n// h時間m分s秒 をパースできるようになっている\n// それ以外 0 秒にしておく\nconst each = ss('各').fallback('')\nconst hour = integer.left(ss('時間')).fallback(0)\nconst minutes = integer.left(ss('分')).fallback(0)\nconst seconds = integer.left(ss('秒')).fallback(0)\nexport const totalTime: Parser<number> = each\n  .right(hour)\n  .comb(minutes)\n  .comb(seconds)\n  .map(([[h, m], s]) => h * 3600 + m * 60 + s)\n","import { canPromote, promote } from '../../../handler/game/piece'\nimport { move as movePos } from '../../../handler/game/position'\nimport { genKifuString } from '../../../handler/kifu/genKifuString'\nimport getCurrent from '../../../handler/kifu/getCurrent'\nimport pushMove from '../../../handler/kifu/pushMove'\nimport { MoveProps } from '../../../model/events/MoveProps'\nimport Kifu, { newKifu } from '../../../model/kifu/Kifu'\nimport Meta, { Versions } from '../../../model/kifu/Meta'\nimport { Move } from '../../../model/kifu/Move'\nimport { HandicapKinds } from '../../../model/shogi/InitialPositions'\nimport { Piece } from '../../../model/shogi/Piece'\nimport Point from '../../../model/shogi/Point'\nimport { literal, oneOf, Parser, rep, s, success } from '../parser'\nimport {\n  column as columnParser,\n  integer,\n  piece as pieceParser,\n  row as rowParser,\n  time,\n  totalTime,\n} from './util'\n\nconst ln: Parser<string> = s('\\n')\nconst noln: Parser<string> = rep(oneOf([' ', '\\t', '\\r'])).map(a => a.join(''))\nconst ss = (str: string) => noln.right(s(str)).left(noln)\nfunction spacing<T>(parser: Parser<T>): Parser<T> {\n  return noln.right(parser).left(noln)\n}\n\nconst toDate: (s: string) => Date | null = s => {\n  const d = new Date(s)\n  if (isNaN(d.getTime())) return null\n  return d\n}\n\n// コメント(棋譜コメントではない)\nexport const cmt: Parser<string> = noln\n  .right(s('#'))\n  .right(literal(ln).fallback(''))\n  .left(ln)\n\nconst metaCmt: Parser<[string, string]> = cmt.map(_ => ['', ''])\nconst metaBlank: Parser<[string, string]> = noln.right(ln).map(_ => ['', ''])\n\nconst metaToken = s('：')\nexport const metaField: Parser<[string, string]> = literal(metaToken.or(ln))\n  .left(metaToken)\n  .comb(literal(ln))\n  .left(ln)\n\n// Meta 情報のパーサー\nconst metaFields: Parser<[string, string][]> = spacing(\n  rep(metaCmt.or(metaBlank).or(metaField))\n)\n\nexport const meta: Parser<Meta> = metaFields.map(fields => {\n  const m: Meta = {\n    version: Versions.latest,\n    date: {},\n    player: {},\n    handicap: HandicapKinds.hirate,\n    other: new Map<string, string>(),\n  }\n\n  for (let [key, _value] of fields) {\n    if (key === '') continue\n    const value: string = _value.trim()\n\n    if (key === '開始日時') {\n      const d = toDate(value)\n      if (d) m.date!.start = d\n      else m.other!.set(key, value)\n    } else if (key === '終了日時') {\n      const d = toDate(value)\n      if (d) m.date!.end = d\n      else m.other!.set(key, value)\n    } else if (key === '棋戦') m.title = value\n    else if (key === '先手' || key === '下手') m.player.sente = value\n    else if (key === '後手' || key === '上手') m.player.gote = value\n    else if (key === '場所') m.place = value\n    else if (key === '手合割') m.handicap = value\n    else if (key === '持ち時間') {\n      const t = totalTime.parse(value)\n      m.time = { sente: t!.value, gote: t!.value }\n    } else m.other!.set(key, value)\n  }\n  return m\n})\n\nconst hypens = rep(s('-'))\nconst separator: Parser<string> = s('手数')\n  .right(hypens)\n  .right(s('指手'))\n  .right(hypens)\n  .right(s('消費時間'))\n  .right(hypens)\n  .right(ln)\n  .fallback('')\n\n// 棋譜コメント\nexport const comment: Parser<string> = ss('*').right(literal(ln)).left(ln)\n\nconst toPoint = ([column, row]: [number, number]) => ({ column, row })\n\nconst dest: Parser<Point> = columnParser.comb(rowParser).map(toPoint)\nconst _same: Parser<string> = s('同　').or(s('同'))\nconst same: (m: Point) => Parser<Point> = prevDest =>\n  _same.map(_ => ({\n    row: prevDest.row,\n    column: prevDest.column,\n  }))\n\nconst source: Parser<Point> = ss('(')\n  .right(columnParser)\n  .comb(rowParser)\n  .left(ss(')'))\n  .or(s('打').map(s => [-1, -1])) // 持ち駒から\n  .map(toPoint)\n\n// Parser<number> の型を変えている\nconst timeParser: Parser<number | undefined> = time\n\nconst consumeTime: Parser<[number?, number?]> = ss('(')\n  .right(timeParser)\n  .left(ss('/'))\n  .comb(timeParser)\n  .left(ss(')'))\n  .fallback([undefined, undefined])\n\nexport function move(prev: Move): Parser<Move> {\n  return noln\n    .right(integer)\n    .left(noln)\n    .comb(dest.or(same(prev.dest)))\n    .comb(pieceParser(prev.pos.turn))\n    .comb(s('成').fallback(''))\n    .comb(source)\n    .comb(consumeTime)\n    .left(literal(ln))\n    .left(ln)\n    .map(([[[[[idx, dest], piece], prm], source], [time, timeTotal]]) => {\n      const promo = (() => {\n        if (prm === '成') return true\n        const promotable = canPromote({\n          sourceRow: source.row,\n          destRow: dest.row,\n          piece,\n        })\n        if (promotable) return false\n        return\n      })()\n\n      const base: {\n        source: Point\n        dest: Point\n        piece: Piece\n        prevDest: Point\n        promote?: boolean\n      } = {\n        source,\n        dest,\n        piece: promo ? promote(piece) : piece,\n        prevDest: prev.dest,\n      }\n      if (promo !== undefined) base.promote = promo\n\n      const before: MoveProps = { ...base, pos: prev.pos }\n      const after: MoveProps = { ...base, pos: movePos(before) }\n      const kifuString: string = genKifuString(before)\n\n      const times: { time?: number; timeTotal?: number } = {}\n      if (time) times.time = time\n      if (timeTotal) times.timeTotal = timeTotal\n\n      return {\n        ...after,\n        index: idx,\n        str: kifuString,\n        ...times,\n      }\n    })\n}\n\n// http://kakinoki.o.oo7.jp/kif_format.html\nexport const KIF: Parser<Kifu> = Parser(_input => {\n  const input = _input.trimRight() + '\\n'\n  const metaResult = meta.left(separator).parse(input)!\n\n  let kifu: Kifu = newKifu(metaResult.value.handicap)\n  kifu.meta = metaResult.value\n\n  let prev: Move = getCurrent(kifu)\n  let nextInput: string = metaResult.next\n  while (true) {\n    const programComment = cmt.parse(nextInput)\n    if (programComment) {\n      nextInput = programComment.next\n      continue\n    }\n\n    const c = comment.parse(nextInput)\n    if (c) {\n      prev.comment = (prev.comment || '') + c.value + '\\n'\n      nextInput = c.next\n      continue\n    }\n\n    const r = move(prev).parse(nextInput)\n    if (!r) break\n    kifu = pushMove(kifu, r.value)\n    prev = r.value\n    nextInput = r.next\n  }\n\n  if (nextInput === input) return null\n  return success(kifu, nextInput)\n})\n","import Kifu from '../../../model/kifu/Kifu'\nimport { Parser } from './../parser'\nimport { KIF } from './KIF'\n\nexport const KifuFormats = {\n  kif: 'KIF',\n  csa: 'CSA',\n  ki2: 'KI2',\n  json: 'JSON',\n}\n\nexport function KifuParser(format: string): Parser<Kifu> {\n  // http://kakinoki.o.oo7.jp/kif_format.html\n  if (format === KifuFormats.kif) return KIF\n  return Parser(_ => null)\n}\n","import React, { FC } from 'react'\nimport './Checkmark.scss'\n\nconst Checkmark: FC = () => {\n  return (\n    <div className=\"checkmark-container\">\n      <div className=\"checkmark draw\"></div>\n    </div>\n  )\n}\n\nexport default Checkmark\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useState } from 'react'\nimport { getAsString } from '../../handler/kifu/getAsString'\nimport { KifuFormats, KifuParser } from '../../lib/parser/parsers/kifu'\nimport { Store, StoreContext } from '../../store/Store'\nimport Button from '../form/Button'\nimport Checkmark from '../util/Checkmark'\nimport CloseButton from '../util/CloseButton'\nimport Loader from '../util/Loader'\nimport './KifuMockup.scss'\n\nconst ParseState = {\n  standby: 'standby',\n  parsing: 'parsing',\n  success: 'success',\n  failure: 'failure',\n}\n\nconst KifuMockup: FC = () => {\n  const [copied, setCopied] = useState(false)\n  const [parseState, setParseState] = useState(ParseState.standby)\n\n  const { gameState, displayState }: Store = React.useContext(StoreContext)\n  const { kifu } = gameState\n\n  const checkmarkTimeout = 1500\n\n  const copyKifuOnClick: () => Promise<void> = async () => {\n    const txt = getAsString(kifu)\n    await navigator.clipboard.writeText(txt)\n    setCopied(true)\n    setTimeout(() => setCopied(false), checkmarkTimeout)\n  }\n\n  const issueLink = 'https://github.com/murosan/shogi-board/issues/new'\n  const readOnClick: () => Promise<void> = async () => {\n    setParseState(ParseState.parsing)\n    const txt = await navigator.clipboard.readText()\n    const result = KifuParser(KifuFormats.kif).parse(txt)\n    if (!result) {\n      setParseState(ParseState.failure)\n      const text = [\n        '読み込みに失敗しました。',\n        '不具合報告はissueへお願いします。',\n        issueLink,\n      ].join('\\n')\n      alert(text)\n      return\n    }\n    setParseState(ParseState.success)\n    gameState.setKifu(result.value)\n    displayState.closeMockup()\n  }\n\n  return (\n    <div className=\"Mockup\">\n      <CloseButton onClick={() => displayState.closeMockup()} />\n\n      <div className=\"KifuMockupContent\">\n        <h1>出力</h1>\n        <div className=\"OptionButton\">\n          {copied ? <Checkmark /> : null}\n          <Button label=\"クリップボードにコピー\" onClick={copyKifuOnClick} />\n        </div>\n      </div>\n\n      <div className=\"KifuMockupContent\">\n        <h1>読み込み</h1>\n        <p>※kif形式のみ対応</p>\n        <div className=\"OptionButton\">\n          {parseState === ParseState.parsing ? <Loader /> : null}\n          {parseState === ParseState.success ? <Checkmark /> : null}\n          <Button label=\"クリップボードから読み込む\" onClick={readOnClick} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(KifuMockup)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { StoreContext } from '../../store/Store'\nimport Check from '../form/Check'\nimport Text from '../form/Text'\nimport CloseButton from '../util/CloseButton'\n\nconst Setting: FC = () => {\n  const { config, displayState } = React.useContext(StoreContext)\n  const { paintTargets, serverURL, saveToLocalStorage, saveBoardWidth } = config\n\n  return (\n    <div className=\"Mockup\">\n      <CloseButton onClick={() => displayState.closeMockup()} />\n      <h1>設定</h1>\n      <Text\n        label=\"shogi-board-server の URL\"\n        value={serverURL}\n        allowEmpty={true}\n        onChange={s => config.setServerURL(s)}\n        placeholder=\"(例)http://localhost:8080\"\n      />\n      <Check\n        label=\"駒が移動できるマスに色を付ける\"\n        value={paintTargets}\n        name=\"PaintTargets\"\n        onChange={b => config.setPaintTargets(b)}\n      />\n      <Check\n        label=\"ブラウザに設定を保存する\"\n        value={saveToLocalStorage}\n        name=\"SaveToLocalStorage\"\n        onChange={b => config.setSaveToLocalStorage(b)}\n      />\n      <Check\n        label=\"盤の幅を記憶する\"\n        value={saveBoardWidth}\n        name=\"SaveBoardWidth\"\n        onChange={b => config.setSaveBoardWidth(b)}\n      />\n    </div>\n  )\n}\n\nexport default observer(Setting)\n","import { observer } from 'mobx-react-lite'\nimport React, { CSSProperties, FC } from 'react'\nimport Column1Img from '../../img/components/columns/1.svg'\nimport Column2Img from '../../img/components/columns/2.svg'\nimport Column3Img from '../../img/components/columns/3.svg'\nimport Column4Img from '../../img/components/columns/4.svg'\nimport Column5Img from '../../img/components/columns/5.svg'\nimport Column6Img from '../../img/components/columns/6.svg'\nimport Column7Img from '../../img/components/columns/7.svg'\nimport Column8Img from '../../img/components/columns/8.svg'\nimport Column9Img from '../../img/components/columns/9.svg'\nimport Row1Img from '../../img/components/rows/1.svg'\nimport Row2Img from '../../img/components/rows/2.svg'\nimport Row3Img from '../../img/components/rows/3.svg'\nimport Row4Img from '../../img/components/rows/4.svg'\nimport Row5Img from '../../img/components/rows/5.svg'\nimport Row6Img from '../../img/components/rows/6.svg'\nimport Row7Img from '../../img/components/rows/7.svg'\nimport Row8Img from '../../img/components/rows/8.svg'\nimport Row9Img from '../../img/components/rows/9.svg'\nimport { find } from '../../lib/validatior/utils/algorithm'\nimport { ClickProps } from '../../model/events/ClickProps'\nimport Confirm from '../../model/shogi/Confirm'\nimport { Empty, Piece } from '../../model/shogi/Piece'\nimport Point from '../../model/shogi/Point'\nimport { Gote, Sente, Turn } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport './Cell.scss'\n\nexport interface Props {\n  row: number\n  column: number\n}\n\nconst Cell: FC<Props> = (props: Props) => {\n  const { gameState, config } = React.useContext(StoreContext)\n  const { indexes, selected, confirm, currentMove, moveTargets } = gameState\n  const { row, column } = props\n\n  const getPiece = () => {\n    const isOnBoard: boolean = inRange(row) && inRange(column)\n    if (!isOnBoard) return Empty\n    return gameState.currentMove.pos.pos[row][column]\n  }\n\n  const piece: Piece = getPiece()\n\n  const turn: Turn = currentMove.pos.turn\n  const isTurn: boolean =\n    (piece > 0 && turn === Sente) || (piece < 0 && turn === Gote)\n\n  // 着色する設定 && 駒が移動できるマスである\n  const isTargeted =\n    config.paintTargets && find(moveTargets, { row, column }) !== -1\n\n  const className: string = getClassName({\n    r: row,\n    c: column,\n    rv: indexes[0] === 9,\n    p: piece,\n    sel: selected,\n    confirm: confirm,\n    isTurn,\n    isTargeted,\n  })\n\n  const bgImg = (url: string) => ({ backgroundImage: `url(${url})` })\n  let style: CSSProperties | undefined\n  if (inRange(column) && row === -1) {\n    if (column === 0) style = bgImg(Column1Img)\n    else if (column === 1) style = bgImg(Column2Img)\n    else if (column === 2) style = bgImg(Column3Img)\n    else if (column === 3) style = bgImg(Column4Img)\n    else if (column === 4) style = bgImg(Column5Img)\n    else if (column === 5) style = bgImg(Column6Img)\n    else if (column === 6) style = bgImg(Column7Img)\n    else if (column === 7) style = bgImg(Column8Img)\n    else style = bgImg(Column9Img)\n  } else if (inRange(row) && column === -1) {\n    if (row === 0) style = bgImg(Row1Img)\n    else if (row === 1) style = bgImg(Row2Img)\n    else if (row === 2) style = bgImg(Row3Img)\n    else if (row === 3) style = bgImg(Row4Img)\n    else if (row === 4) style = bgImg(Row5Img)\n    else if (row === 5) style = bgImg(Row6Img)\n    else if (row === 6) style = bgImg(Row7Img)\n    else if (row === 7) style = bgImg(Row8Img)\n    else style = bgImg(Row9Img)\n  }\n\n  return (\n    <div className={className} onClick={() => click()} style={style}>\n      {renderConfirm(confirm)}\n    </div>\n  )\n\n  function renderConfirm(cf: Confirm | null): JSX.Element | undefined {\n    if (!cf || cf.row !== row || cf.column !== column) return\n\n    const isReversed: boolean = indexes[0] === 9\n    const isGote =\n      (isReversed && cf.preserved > 0) || (!isReversed && cf.preserved < 0)\n\n    const className = 'Piece-Confirm Piece-Confirm' + Number(isGote)\n\n    const promote = () => click(cf, true)\n    const preserve = () => click(cf)\n\n    // TODO: この方法だと画面幅によって1pxずれる\n    return (\n      <div className={className}>\n        <div className=\"Piece-Confirm-Promote\" onClick={promote} />\n        <div className=\"Piece-Confirm-Preserve\" onClick={preserve} />\n      </div>\n    )\n  }\n\n  function click(cf?: Confirm, promote?: true) {\n    if (confirm && !cf) return\n    const clicked: Confirm | Piece = cf || getPiece()\n    const p: ClickProps = { clicked, row, column, promote }\n    gameState.clickPiece(p)\n  }\n}\n\ninterface GetClassNameProps {\n  r: number // row\n  c: number // column\n  rv: boolean // isReversed\n  p: Piece\n  sel: Point | null // selected\n  confirm: Confirm | null\n  isTurn: boolean\n  isTargeted: boolean\n}\n\n// つらい感じ\nfunction getClassName(p: GetClassNameProps): string {\n  const { r, c, sel, confirm, rv, isTurn, isTargeted } = p\n  if (\n    !!confirm &&\n    !!sel &&\n    ((r === sel.row && c === sel.column) ||\n      (r === confirm.row && c === confirm.column))\n  ) {\n    // 成・不成の選択ウィンドウができるとき、元の駒の表示は消す\n    // TODO: ひどい\n    p.p = Empty\n  }\n\n  const classes: string[] = ['Cell']\n\n  const rowInRange: boolean = inRange(r)\n  const colInRange: boolean = inRange(c)\n  const isLeft: boolean = rowInRange && ((!rv && c === 8) || (rv && c === 0))\n  const isTop: boolean = colInRange && ((!rv && r === 0) || (rv && r === 8))\n  const isStar: boolean =\n    (!rv &&\n      ((r === 2 && c === 6) ||\n        (r === 2 && c === 3) ||\n        (r === 5 && c === 6) ||\n        (r === 5 && c === 3))) ||\n    (rv &&\n      ((r === 6 && c === 2) ||\n        (r === 6 && c === 5) ||\n        (r === 3 && c === 2) ||\n        (r === 3 && c === 5)))\n  const isSelected: boolean =\n    rowInRange && colInRange && !!sel && sel.row === r && sel.column === c\n\n  if (rowInRange && colInRange) {\n    classes.push('Piece')\n    classes.push('Piece-Bordered')\n  }\n\n  const rvp: number | undefined = p.p && rv ? p.p * -1 : p.p\n  if (rvp) classes.push(`Piece-${rvp}`)\n  if (isTurn) classes.push('Piece-Turn')\n  if (isSelected) classes.push('Piece-Selected')\n  if (isTargeted) classes.push('Piece-Targeted')\n  if (isLeft) classes.push('Piece-Left')\n  if (isTop) classes.push('Piece-Top')\n\n  const isEdge = (c === -1 && rowInRange) || (r === -1 && colInRange)\n  if (isEdge) classes.push('Cell-Edge')\n  if (isStar) classes.push('Piece-Star')\n\n  return classes.join(' ')\n}\n\nfunction inRange(n: number): boolean {\n  return 0 <= n && n <= 8\n}\n\nexport default observer(Cell)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport {\n  MockupEngineControl,\n  MockupKifu,\n  MockupServerSetting,\n  MockupSetting,\n} from '../../model/display/MockupState'\nimport { StoreContext } from '../../store/Store'\nimport Controller from '../engine/connection/Controller'\nimport KifuMockup from '../kifu/KifuMockup'\nimport Setting from '../setting/Setting'\nimport './Board.scss'\nimport Cell from './Cell'\n\nconst Board: FC = () => {\n  const { gameState, displayState } = React.useContext(StoreContext)\n  const idx = gameState.indexes\n  const rows = idx.map(r =>\n    idx\n      .slice()\n      .reverse()\n      .map(c => <Cell key={r * 10 + c} row={r} column={c} />)\n  )\n\n  return (\n    <div className=\"BoardContainer\">\n      <div className=\"ResetPseudo\">\n        <div className=\"Board\">{rows}</div>\n        {renderMockup()}\n      </div>\n    </div>\n  )\n\n  function renderMockup() {\n    const { mockup } = displayState\n    if (mockup === MockupEngineControl) return <Controller />\n    // TODO: server setting は別に分ける？\n    if (mockup === MockupSetting || mockup === MockupServerSetting)\n      return <Setting />\n    if (mockup === MockupKifu) return <KifuMockup />\n  }\n}\n\nexport default observer(Board)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport ConfigurationImg from '../../img/components/buttons/configuration.svg'\nimport ConnectToEngineImg from '../../img/components/buttons/connect-to-engine.svg'\nimport KifuImg from '../../img/components/buttons/kifu.svg'\nimport NextFiveImg from '../../img/components/buttons/next-five.svg'\nimport NextOneImg from '../../img/components/buttons/next-one.svg'\nimport PrevFiveImg from '../../img/components/buttons/prev-five.svg'\nimport PrevOneImg from '../../img/components/buttons/prev-one.svg'\nimport ReverseImg from '../../img/components/buttons/reverse.svg'\nimport StopEngineImg from '../../img/components/buttons/stop-engine.svg'\nimport {\n  MockupEngineControl,\n  MockupKifu,\n  MockupServerSetting,\n  MockupSetting,\n} from '../../model/display/MockupState'\nimport { Thinking } from '../../model/engine/State'\nimport { StoreContext } from '../../store/Store'\nimport './Buttons.scss'\n\nconst Buttons: FC = () => {\n  const { gameState, displayState, engineState, config } =\n    React.useContext(StoreContext)\n  const { currentMove } = gameState\n  const i: number = currentMove.index\n\n  const prevOne: number = i - 1 < 0 ? 0 : i - 1\n  const nextOne: number = i + 1\n  const prevFive: number = i - 5 < 0 ? 0 : i - 5\n  const nextFive: number = i + 5\n  const skipKifu = (i: number) => gameState.clickKifu(i)\n\n  const engineOnClick: () => Promise<void> = async () => {\n    const { current, state } = engineState\n    if (!current || state !== Thinking) return await connectToEngine()\n    await engineState.stopThinking()\n  }\n\n  const bgImg = (url: string) => ({ backgroundImage: `url(${url})` })\n\n  return (\n    <div className=\"ButtonsContainer\">\n      <button\n        className=\"PrevOne\"\n        onClick={() => skipKifu(prevOne)}\n        style={bgImg(PrevOneImg)}\n      />\n      <button\n        className=\"NextOne\"\n        onClick={() => skipKifu(nextOne)}\n        style={bgImg(NextOneImg)}\n      />\n      <button\n        className=\"PrevFive\"\n        onClick={() => skipKifu(prevFive)}\n        style={bgImg(PrevFiveImg)}\n      />\n      <button\n        className=\"NextFive\"\n        onClick={() => skipKifu(nextFive)}\n        style={bgImg(NextFiveImg)}\n      />\n      <button\n        className=\"Reverse\"\n        onClick={() => gameState.reverse()}\n        style={bgImg(ReverseImg)}\n      />\n      <button\n        className=\"CopyOrRead\"\n        onClick={() => displayState.setMockupState(MockupKifu)}\n        style={bgImg(KifuImg)}\n      />\n      <button\n        className=\"ConnectToEngine\"\n        onClick={engineOnClick}\n        style={\n          engineState.state === Thinking\n            ? bgImg(StopEngineImg)\n            : bgImg(ConnectToEngineImg)\n        }\n      />\n      <button\n        className=\"Configuration\"\n        onClick={() => displayState.setMockupState(MockupSetting)}\n        style={bgImg(ConfigurationImg)}\n      />\n    </div>\n  )\n\n  async function connectToEngine() {\n    // サーバー URL が設定されてなかったら、設定画面を出す\n    if (config.serverURL === '')\n      return await displayState.setMockupState(MockupServerSetting)\n\n    await displayState.setMockupState(MockupEngineControl)\n  }\n}\n\nexport default observer(Buttons)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport {\n  Fu0,\n  Gin0,\n  Hisha0,\n  Kaku0,\n  Kei0,\n  Kin0,\n  Kyou0,\n  Piece,\n} from '../../model/shogi/Piece'\nimport { Turn } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport './Captures.scss'\n\nexport interface Props {\n  isLeftSide: boolean\n  captures: number[]\n  isTurn: boolean\n}\n\nconst Captures: FC<Props> = (props: Props) => {\n  const { gameState } = React.useContext(StoreContext)\n  const { selected, currentMove } = gameState\n\n  const { captures, isLeftSide, isTurn } = props\n  const className: string = 'Captures Captures' + Number(isLeftSide)\n\n  return (\n    <div className={className}>\n      {cells('Hisha', Hisha0, captures[6])}\n      {cells('Kaku', Kaku0, captures[5])}\n      {cells('Kin', Kin0, captures[4])}\n      {cells('Gin', Gin0, captures[3])}\n      {cells('Kei', Kei0, captures[2])}\n      {cells('Kyou', Kyou0, captures[1])}\n      {cells('Fu', Fu0, captures[0])}\n    </div>\n  )\n\n  function cells(name: string, pieceId: Piece, count: number): JSX.Element {\n    const turn: Turn = currentMove.pos.turn\n\n    const children = Array.from(Array(count).keys()).map(i => {\n      const selectedClass = isTurn ? getSelectedClass(pieceId, i) : ''\n      const isTurnClass = isTurn ? 'Piece-Turn' : ''\n      const piece = isLeftSide ? -pieceId : pieceId\n      const sideNumber = Number(isLeftSide)\n      const captureClass = `Capture-${pieceId}${sideNumber}${count}${i + 1}`\n      const className = `Piece Piece-${piece} ${isTurnClass} ${selectedClass} ${captureClass}`\n      const key = `Cap-${sideNumber}-${name}-${i}`\n\n      const onClick = () => {\n        if (!isTurn) return\n        const clicked: number = turn * pieceId\n        gameState.clickPiece({ clicked, row: -1, column: -1, i })\n      }\n      return <div key={key} className={className} onClick={onClick} />\n    })\n    const className = `Captures-Inner Captures-${name}`\n    return <div className={className}>{children}</div>\n  }\n\n  function getSelectedClass(pieceId: Piece, index: number): string {\n    return !!selected &&\n      selected.piece &&\n      selected.row === -1 &&\n      selected.column === -1 &&\n      Math.abs(selected.piece) === pieceId /* TODO: すげー嫌 */ &&\n      selected.i === index\n      ? 'Piece-Selected'\n      : ''\n  }\n}\n\nexport default observer(Captures)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { HandicapKinds } from '../../model/shogi/InitialPositions'\nimport { StoreContext } from '../../store/Store'\nimport './UserInfo.scss'\n\nexport interface Props {\n  isRightSide: boolean\n}\n\nconst UserInfo: FC<Props> = (props: Props) => {\n  const { gameState } = React.useContext(StoreContext)\n  const { player, handicap } = gameState.kifu.meta\n\n  const isHirate = handicap === HandicapKinds.hirate\n  const { isRightSide } = props\n  const isReversed = gameState.isReversed\n\n  const isSente = (isRightSide && !isReversed) || (!isRightSide && isReversed)\n\n  const name = isSente ? player.sente : player.gote\n  if (!name) return <div />\n\n  const label = () => {\n    if (isHirate && isSente) return '先手'\n    if (isHirate) return '後手'\n    if (isSente) return '下手'\n    return '上手'\n  }\n\n  const uinfoClass = (isRightSide ? 'Right' : 'Left') + ' UserInfo'\n  const unameClass =\n    (isRightSide ? 'UserNameBottom' : 'UserNameTop') + ' UserName'\n\n  return (\n    <div className={uinfoClass}>\n      <div className={unameClass}>\n        <span className=\"Label\">{label() + ':'}</span>\n        <span className=\"Name\" title={name}>\n          {name}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(UserInfo)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport Buttons from './Buttons'\nimport Captures from './Captures'\nimport './LeftSide.scss'\nimport UserInfo from './UserInfo'\n\nconst LeftSide: FC = () => {\n  const { gameState } = React.useContext(StoreContext)\n  const { turn, cap0, cap1 } = gameState.currentMove.pos\n  const caps: number[] = gameState.isReversed ? cap0 : cap1\n  const isTurn: boolean = gameState.isReversed ? turn === Sente : turn === Gote\n\n  return (\n    <div className=\"LeftSide\">\n      <Captures isLeftSide={true} captures={caps} isTurn={isTurn} />\n      <div className=\"LeftInfo\">\n        <UserInfo isRightSide={false} />\n        <Buttons />\n      </div>\n    </div>\n  )\n}\n\nexport default observer(LeftSide)\n","import { observer } from 'mobx-react-lite'\nimport React, { FC, useEffect } from 'react'\nimport { intoView } from '../../handler/dom/intoView'\nimport Branch from '../../model/kifu/Branch'\nimport History, { isBranch, KifuComponent } from '../../model/kifu/History'\nimport { Move } from '../../model/kifu/Move'\nimport { StoreContext } from '../../store/Store'\nimport './Kifu.scss'\n\nconst CURRENT_KIFU_ELM_ID = 'Move-Current'\n\nconst Kifu: FC = () => {\n  const { gameState } = React.useContext(StoreContext)\n\n  useEffect(() => {\n    // 自動スクロール\n    // TODO: スマホで使いにくいし自前実装した方がいいかも\n    //       まぁスマホサポートしてないけど\n    intoView(CURRENT_KIFU_ELM_ID)\n  })\n\n  const { moves } = gameState.kifu.history\n  const elms: JSX.Element[] = renderKifu(moves, 0)\n  return (\n    <div className=\"KifuContainer\">\n      <div className=\"Kifu-Inner\">{elms}</div>\n    </div>\n  )\n\n  function renderKifu(moves: KifuComponent[], n: number): JSX.Element[] {\n    return moves.flatMap((kc: KifuComponent, i: number) => {\n      if (isBranch(kc)) return renderBranch(kc, n + i)\n      return renderMove(kc, n + i)\n    })\n  }\n\n  function renderBranch(b: Branch, n: number): JSX.Element[] {\n    const main: History = b.branches[b.index]\n    const [head, ...rest] = main.moves // head は必ず Move\n\n    const otherHeadsDom: JSX.Element[] = []\n    for (let i = 0; i < b.branches.length; i++) {\n      if (i === b.index) continue\n      const m: Move = b.branches[i].moves[0] as Move // head は必ず Move\n      const key: string = `${n}-${i}`\n      const txt: string = `-- ${kifuText(m)}`\n      const onClick = () => gameState.clickKifu(n, i)\n      otherHeadsDom.push(\n        <div key={key} className=\"Branch\" onClick={onClick}>\n          <span>{txt}</span>\n        </div>\n      )\n    }\n\n    const restDom = rest.length !== 0 ? renderKifu(rest, n + 1) : []\n\n    return [renderMove(head as Move, n)].concat(otherHeadsDom).concat(restDom)\n  }\n\n  function renderMove(m: Move, n: number): JSX.Element {\n    const { currentMove } = gameState\n    const id = currentMove.index === n ? CURRENT_KIFU_ELM_ID : undefined\n    const onClick = () => gameState.clickKifu(n)\n\n    return (\n      <div key={n} className=\"Move\" id={id} onClick={onClick}>\n        <div className=\"Number code\">{n + '.'}</div>\n        <div className=\"MoveText\">{kifuText(m)}</div>\n      </div>\n    )\n  }\n\n  function kifuText(m: Move): string {\n    const s = m.str\n    // 同 で始まっていて2文字だったら空白を入れる\n    if (s.length === 2 && s[0] === '同') return `同　${s[1]}`\n    return s\n  }\n}\n\nexport default observer(Kifu)\n","// ただ scrollIntoView を呼ぶだけ\nexport function intoView(id: string): void {\n  const current: HTMLElement | null = document.getElementById(id)\n  if (!current) return\n  if (!(current as any).scrollIntoViewIfNeeded) return\n  ;(current as any).scrollIntoViewIfNeeded()\n}\n","import { observer } from 'mobx-react-lite'\nimport React, { FC } from 'react'\nimport { Gote, Sente } from '../../model/shogi/Turn'\nimport { StoreContext } from '../../store/Store'\nimport Captures from './Captures'\nimport Kifu from './Kifu'\nimport './RightSide.scss'\nimport UserInfo from './UserInfo'\n\nconst RightSide: FC = () => {\n  const { gameState } = React.useContext(StoreContext)\n  const { turn, cap0, cap1 } = gameState.currentMove.pos\n  const caps: number[] = gameState.isReversed ? cap1 : cap0\n  const isTurn: boolean = gameState.isReversed ? turn === Gote : turn === Sente\n\n  return (\n    <div className=\"RightSide\">\n      <div className=\"RightInfo\">\n        <Kifu />\n        <UserInfo isRightSide={true} />\n      </div>\n      <Captures isLeftSide={false} captures={caps} isTurn={isTurn} />\n    </div>\n  )\n}\n\nexport default observer(RightSide)\n","import React, { FC } from 'react'\nimport Board from './Board'\nimport './BoardArea.scss'\nimport LeftSide from './LeftSide'\nimport RightSide from './RightSide'\n\nconst BoardArea: FC = () => {\n  return (\n    <div className=\"BoardArea\">\n      <LeftSide />\n      <Board />\n      <RightSide />\n    </div>\n  )\n}\n\nexport default BoardArea\n","import { observer } from 'mobx-react-lite'\nimport React, { CSSProperties, FC } from 'react'\nimport { Thinking } from '../model/engine/State'\nimport { StoreContext } from '../store/Store'\nimport './App.scss'\nimport SideInfo from './engine/info/SideInfo'\nimport WidthController from './setting/WidthController'\nimport BoardArea from './shogi/BoardArea'\n\nconst App: FC = () => {\n  const { engineState, config } = React.useContext(StoreContext)\n  const { appWidth } = config\n\n  const isThinking: boolean = engineState.state === Thinking\n\n  const classes: string[] = ['App']\n  if (isThinking) classes.push('App-SideInfo')\n  else classes.push('App-BoardOnly')\n\n  if (appWidth) {\n    const w = (n: number) => {\n      if (isThinking) return (n * 2) / 3\n      return n\n    }\n    if (appWidth >= w(1500)) classes.push('Border-3')\n    if (appWidth >= w(800)) classes.push('Border-2')\n    classes.push('Border-1')\n  }\n\n  const className = classes.join(' ')\n  const style: CSSProperties = { width: appWidth ? `${appWidth}px` : '100%' }\n\n  return (\n    <div className=\"AppContainer\" style={style}>\n      <WidthController />\n      <div className={className}>\n        <BoardArea />\n        {isThinking ? <SideInfo /> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// https://github.com/mobxjs/mobx-react-lite/#observer-batching\nimport 'mobx-react-lite/batchingForReactDom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register()\n"],"sourceRoot":""}